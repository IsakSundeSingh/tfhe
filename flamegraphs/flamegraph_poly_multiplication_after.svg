<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180"><g><title>core::cmp::min (4 samples, 0.23%)</title><rect x="0.1146%" y="821" width="0.2292%" height="15" fill="rgb(227,0,7)"/><text x="0.3646%" y="831.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.17%)</title><rect x="0.1719%" y="805" width="0.1719%" height="15" fill="rgb(217,0,24)"/><text x="0.4219%" y="815.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.17%)</title><rect x="0.1719%" y="789" width="0.1719%" height="15" fill="rgb(221,193,54)"/><text x="0.4219%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.11%)</title><rect x="0.3438%" y="773" width="0.1146%" height="15" fill="rgb(248,212,6)"/><text x="0.5938%" y="783.50"></text></g><g><title>core::mem::replace (4 samples, 0.23%)</title><rect x="0.3438%" y="821" width="0.2292%" height="15" fill="rgb(208,68,35)"/><text x="0.5938%" y="831.50"></text></g><g><title>core::mem::swap (4 samples, 0.23%)</title><rect x="0.3438%" y="805" width="0.2292%" height="15" fill="rgb(232,128,0)"/><text x="0.5938%" y="815.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.23%)</title><rect x="0.3438%" y="789" width="0.2292%" height="15" fill="rgb(207,160,47)"/><text x="0.5938%" y="799.50"></text></g><g><title>core::ptr::read (2 samples, 0.11%)</title><rect x="0.4585%" y="773" width="0.1146%" height="15" fill="rgb(228,23,34)"/><text x="0.7085%" y="783.50"></text></g><g><title>&lt;core::slice::ChunksMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.57%)</title><rect x="0.0573%" y="837" width="0.5731%" height="15" fill="rgb(218,30,26)"/><text x="0.3073%" y="847.50"></text></g><g><title>&lt;&amp;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&lt;num_complex::Complex&lt;T&gt;&gt;&gt;::mul (7 samples, 0.40%)</title><rect x="1.3181%" y="821" width="0.4011%" height="15" fill="rgb(220,122,19)"/><text x="1.5681%" y="831.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (6 samples, 0.34%)</title><rect x="1.3754%" y="805" width="0.3438%" height="15" fill="rgb(250,228,42)"/><text x="1.6254%" y="815.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.11%)</title><rect x="2.3496%" y="789" width="0.1146%" height="15" fill="rgb(240,193,28)"/><text x="2.5996%" y="799.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&gt;::add (10 samples, 0.57%)</title><rect x="2.2350%" y="805" width="0.5731%" height="15" fill="rgb(216,20,37)"/><text x="2.4850%" y="815.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::new (6 samples, 0.34%)</title><rect x="2.4642%" y="789" width="0.3438%" height="15" fill="rgb(206,188,39)"/><text x="2.7142%" y="799.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Sub&gt;::sub (2 samples, 0.11%)</title><rect x="2.8080%" y="805" width="0.1146%" height="15" fill="rgb(217,207,13)"/><text x="3.0580%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.63%)</title><rect x="3.6676%" y="773" width="0.6304%" height="15" fill="rgb(231,73,38)"/><text x="3.9176%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (7 samples, 0.40%)</title><rect x="3.8968%" y="757" width="0.4011%" height="15" fill="rgb(225,20,46)"/><text x="4.1468%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (29 samples, 1.66%)</title><rect x="2.9226%" y="805" width="1.6619%" height="15" fill="rgb(210,31,41)"/><text x="3.1726%" y="815.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (22 samples, 1.26%)</title><rect x="3.3238%" y="789" width="1.2607%" height="15" fill="rgb(221,200,47)"/><text x="3.5738%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (5 samples, 0.29%)</title><rect x="4.2980%" y="773" width="0.2865%" height="15" fill="rgb(226,26,5)"/><text x="4.5480%" y="783.50"></text></g><g><title>&lt;rustfft::algorithm::butterflies::Butterfly2 as rustfft::algorithm::butterflies::FFTButterfly&lt;T&gt;&gt;::process_inplace (61 samples, 3.50%)</title><rect x="1.7192%" y="821" width="3.4957%" height="15" fill="rgb(249,33,26)"/><text x="1.9692%" y="831.50">&lt;ru..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (11 samples, 0.63%)</title><rect x="4.5845%" y="805" width="0.6304%" height="15" fill="rgb(235,183,28)"/><text x="4.8345%" y="815.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.57%)</title><rect x="4.6418%" y="789" width="0.5731%" height="15" fill="rgb(221,5,38)"/><text x="4.8918%" y="799.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&gt;::add (2 samples, 0.11%)</title><rect x="6.1891%" y="789" width="0.1146%" height="15" fill="rgb(247,18,42)"/><text x="6.4391%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.46%)</title><rect x="6.5903%" y="757" width="0.4585%" height="15" fill="rgb(241,131,45)"/><text x="6.8403%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.23%)</title><rect x="6.8195%" y="741" width="0.2292%" height="15" fill="rgb(249,31,29)"/><text x="7.0695%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.80%)</title><rect x="6.3610%" y="789" width="0.8023%" height="15" fill="rgb(225,111,53)"/><text x="6.6110%" y="799.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.69%)</title><rect x="6.4756%" y="773" width="0.6877%" height="15" fill="rgb(238,160,17)"/><text x="6.7256%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.11%)</title><rect x="7.0487%" y="757" width="0.1146%" height="15" fill="rgb(214,148,48)"/><text x="7.2987%" y="767.50"></text></g><g><title>&lt;rustfft::algorithm::butterflies::Butterfly2 as rustfft::algorithm::butterflies::FFTButterfly&lt;T&gt;&gt;::process_inplace (37 samples, 2.12%)</title><rect x="5.5014%" y="805" width="2.1203%" height="15" fill="rgb(232,36,49)"/><text x="5.7514%" y="815.50">&lt;..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (8 samples, 0.46%)</title><rect x="7.1633%" y="789" width="0.4585%" height="15" fill="rgb(209,103,24)"/><text x="7.4133%" y="799.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.34%)</title><rect x="7.2779%" y="773" width="0.3438%" height="15" fill="rgb(229,88,8)"/><text x="7.5279%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.17%)</title><rect x="7.4499%" y="757" width="0.1719%" height="15" fill="rgb(213,181,19)"/><text x="7.6999%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.11%)</title><rect x="7.5072%" y="741" width="0.1146%" height="15" fill="rgb(254,191,54)"/><text x="7.7572%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (6 samples, 0.34%)</title><rect x="7.6791%" y="805" width="0.3438%" height="15" fill="rgb(241,83,37)"/><text x="7.9291%" y="815.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.29%)</title><rect x="7.7364%" y="789" width="0.2865%" height="15" fill="rgb(233,36,39)"/><text x="7.9864%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (6 samples, 0.34%)</title><rect x="8.0229%" y="805" width="0.3438%" height="15" fill="rgb(226,3,54)"/><text x="8.2729%" y="815.50"></text></g><g><title>core::slice::from_raw_parts_mut (4 samples, 0.23%)</title><rect x="8.1375%" y="789" width="0.2292%" height="15" fill="rgb(245,192,40)"/><text x="8.3875%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.11%)</title><rect x="8.2521%" y="773" width="0.1146%" height="15" fill="rgb(238,167,29)"/><text x="8.5021%" y="783.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&gt;::add (6 samples, 0.34%)</title><rect x="8.3668%" y="789" width="0.3438%" height="15" fill="rgb(232,182,51)"/><text x="8.6168%" y="799.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::new (3 samples, 0.17%)</title><rect x="8.5387%" y="773" width="0.1719%" height="15" fill="rgb(231,60,39)"/><text x="8.7887%" y="783.50"></text></g><g><title>rustfft::algorithm::butterflies::Butterfly2::perform_fft_direct (8 samples, 0.46%)</title><rect x="8.3668%" y="805" width="0.4585%" height="15" fill="rgb(208,69,12)"/><text x="8.6168%" y="815.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Sub&gt;::sub (2 samples, 0.11%)</title><rect x="8.7106%" y="789" width="0.1146%" height="15" fill="rgb(235,93,37)"/><text x="8.9606%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (4 samples, 0.23%)</title><rect x="8.9398%" y="789" width="0.2292%" height="15" fill="rgb(213,116,39)"/><text x="9.1898%" y="799.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.17%)</title><rect x="8.9971%" y="773" width="0.1719%" height="15" fill="rgb(222,207,29)"/><text x="9.2471%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.11%)</title><rect x="9.0544%" y="757" width="0.1146%" height="15" fill="rgb(206,96,30)"/><text x="9.3044%" y="767.50"></text></g><g><title>rustfft::algorithm::butterflies::swap_unchecked (9 samples, 0.52%)</title><rect x="8.8252%" y="805" width="0.5158%" height="15" fill="rgb(218,138,4)"/><text x="9.0752%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (3 samples, 0.17%)</title><rect x="9.1691%" y="789" width="0.1719%" height="15" fill="rgb(250,191,14)"/><text x="9.4191%" y="799.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.11%)</title><rect x="9.2264%" y="773" width="0.1146%" height="15" fill="rgb(239,60,40)"/><text x="9.4764%" y="783.50"></text></g><g><title>&lt;rustfft::algorithm::butterflies::Butterfly4 as rustfft::algorithm::butterflies::FFTButterfly&lt;T&gt;&gt;::process_inplace (77 samples, 4.41%)</title><rect x="5.2149%" y="821" width="4.4126%" height="15" fill="rgb(206,27,48)"/><text x="5.4649%" y="831.50">&lt;rust..</text></g><g><title>rustfft::twiddles::rotate_90 (5 samples, 0.29%)</title><rect x="9.3410%" y="805" width="0.2865%" height="15" fill="rgb(225,35,8)"/><text x="9.5910%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.17%)</title><rect x="10.0860%" y="789" width="0.1719%" height="15" fill="rgb(250,213,24)"/><text x="10.3360%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.69%)</title><rect x="9.6275%" y="821" width="0.6877%" height="15" fill="rgb(247,123,22)"/><text x="9.8775%" y="831.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.40%)</title><rect x="9.9140%" y="805" width="0.4011%" height="15" fill="rgb(231,138,38)"/><text x="10.1640%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.29%)</title><rect x="10.6017%" y="789" width="0.2865%" height="15" fill="rgb(231,145,46)"/><text x="10.8517%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.29%)</title><rect x="10.6017%" y="773" width="0.2865%" height="15" fill="rgb(251,118,11)"/><text x="10.8517%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (12 samples, 0.69%)</title><rect x="10.3152%" y="821" width="0.6877%" height="15" fill="rgb(217,147,25)"/><text x="10.5652%" y="831.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.57%)</title><rect x="10.4298%" y="805" width="0.5731%" height="15" fill="rgb(247,81,37)"/><text x="10.6798%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (2 samples, 0.11%)</title><rect x="10.8883%" y="789" width="0.1146%" height="15" fill="rgb(209,12,38)"/><text x="11.1383%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.23%)</title><rect x="11.1175%" y="805" width="0.2292%" height="15" fill="rgb(227,1,9)"/><text x="11.3675%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.11%)</title><rect x="11.2321%" y="789" width="0.1146%" height="15" fill="rgb(248,47,43)"/><text x="11.4821%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.23%)</title><rect x="11.3467%" y="805" width="0.2292%" height="15" fill="rgb(221,10,30)"/><text x="11.5967%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.23%)</title><rect x="11.3467%" y="789" width="0.2292%" height="15" fill="rgb(210,229,1)"/><text x="11.5967%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.23%)</title><rect x="11.3467%" y="773" width="0.2292%" height="15" fill="rgb(222,148,37)"/><text x="11.5967%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.17%)</title><rect x="11.6332%" y="773" width="0.1719%" height="15" fill="rgb(234,67,33)"/><text x="11.8832%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.11%)</title><rect x="11.6905%" y="757" width="0.1146%" height="15" fill="rgb(247,98,35)"/><text x="11.9405%" y="767.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (15 samples, 0.86%)</title><rect x="11.0029%" y="821" width="0.8596%" height="15" fill="rgb(247,138,52)"/><text x="11.2529%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.29%)</title><rect x="11.5759%" y="805" width="0.2865%" height="15" fill="rgb(213,79,30)"/><text x="11.8259%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.29%)</title><rect x="11.5759%" y="789" width="0.2865%" height="15" fill="rgb(246,177,23)"/><text x="11.8259%" y="799.50"></text></g><g><title>&lt;rustfft::algorithm::radix4::Radix4&lt;T&gt; as rustfft::FFT&lt;T&gt;&gt;::process (209 samples, 11.98%)</title><rect x="0.0000%" y="885" width="11.9771%" height="15" fill="rgb(230,62,27)"/><text x="0.2500%" y="895.50">&lt;rustfft::algorith..</text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::perform_fft (209 samples, 11.98%)</title><rect x="0.0000%" y="869" width="11.9771%" height="15" fill="rgb(216,154,8)"/><text x="0.2500%" y="879.50">rustfft::algorithm..</text></g><g><title>&lt;rustfft::algorithm::butterflies::Butterfly8&lt;T&gt; as rustfft::algorithm::butterflies::FFTButterfly&lt;T&gt;&gt;::process_multi_inplace (209 samples, 11.98%)</title><rect x="0.0000%" y="853" width="11.9771%" height="15" fill="rgb(244,35,45)"/><text x="0.2500%" y="863.50">&lt;rustfft::algorith..</text></g><g><title>&lt;rustfft::algorithm::butterflies::Butterfly8&lt;T&gt; as rustfft::algorithm::butterflies::FFTButterfly&lt;T&gt;&gt;::process_inplace (198 samples, 11.35%)</title><rect x="0.6304%" y="837" width="11.3467%" height="15" fill="rgb(251,115,12)"/><text x="0.8804%" y="847.50">&lt;rustfft::algorit..</text></g><g><title>rustfft::twiddles::rotate_90 (2 samples, 0.11%)</title><rect x="11.8625%" y="821" width="0.1146%" height="15" fill="rgb(240,54,50)"/><text x="12.1125%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Neg&gt;::neg (2 samples, 0.11%)</title><rect x="11.8625%" y="805" width="0.1146%" height="15" fill="rgb(233,84,52)"/><text x="12.1125%" y="815.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="12.3209%" y="341" width="0.1146%" height="15" fill="rgb(207,117,47)"/><text x="12.5709%" y="351.50"></text></g><g><title>__libc_start_main (10 samples, 0.57%)</title><rect x="11.9771%" y="885" width="0.5731%" height="15" fill="rgb(249,43,39)"/><text x="12.2271%" y="895.50"></text></g><g><title>main (10 samples, 0.57%)</title><rect x="11.9771%" y="869" width="0.5731%" height="15" fill="rgb(209,38,44)"/><text x="12.2271%" y="879.50"></text></g><g><title>std::rt::lang_start (10 samples, 0.57%)</title><rect x="11.9771%" y="853" width="0.5731%" height="15" fill="rgb(236,212,23)"/><text x="12.2271%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (10 samples, 0.57%)</title><rect x="11.9771%" y="837" width="0.5731%" height="15" fill="rgb(242,79,21)"/><text x="12.2271%" y="847.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.57%)</title><rect x="11.9771%" y="821" width="0.5731%" height="15" fill="rgb(211,96,35)"/><text x="12.2271%" y="831.50"></text></g><g><title>std::panicking::try (10 samples, 0.57%)</title><rect x="11.9771%" y="805" width="0.5731%" height="15" fill="rgb(253,215,40)"/><text x="12.2271%" y="815.50"></text></g><g><title>__rust_maybe_catch_panic (10 samples, 0.57%)</title><rect x="11.9771%" y="789" width="0.5731%" height="15" fill="rgb(211,81,21)"/><text x="12.2271%" y="799.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.57%)</title><rect x="11.9771%" y="773" width="0.5731%" height="15" fill="rgb(208,190,38)"/><text x="12.2271%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="757" width="0.5731%" height="15" fill="rgb(235,213,38)"/><text x="12.2271%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="741" width="0.5731%" height="15" fill="rgb(237,122,38)"/><text x="12.2271%" y="751.50"></text></g><g><title>encrypt::main (10 samples, 0.57%)</title><rect x="11.9771%" y="725" width="0.5731%" height="15" fill="rgb(244,218,35)"/><text x="12.2271%" y="735.50"></text></g><g><title>tfhe::bootstrapping::new_random_gate_bootstrapping_secret_keyset (10 samples, 0.57%)</title><rect x="11.9771%" y="709" width="0.5731%" height="15" fill="rgb(240,68,47)"/><text x="12.2271%" y="719.50"></text></g><g><title>tfhe::lwe::LweBootstrappingKey::create (10 samples, 0.57%)</title><rect x="11.9771%" y="693" width="0.5731%" height="15" fill="rgb(210,16,53)"/><text x="12.2271%" y="703.50"></text></g><g><title>tfhe::tgsw::TGswKey::encrypt (10 samples, 0.57%)</title><rect x="11.9771%" y="677" width="0.5731%" height="15" fill="rgb(235,124,12)"/><text x="12.2271%" y="687.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (10 samples, 0.57%)</title><rect x="11.9771%" y="661" width="0.5731%" height="15" fill="rgb(224,169,11)"/><text x="12.2271%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.57%)</title><rect x="11.9771%" y="645" width="0.5731%" height="15" fill="rgb(250,166,2)"/><text x="12.2271%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.57%)</title><rect x="11.9771%" y="629" width="0.5731%" height="15" fill="rgb(242,216,29)"/><text x="12.2271%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.57%)</title><rect x="11.9771%" y="613" width="0.5731%" height="15" fill="rgb(230,116,27)"/><text x="12.2271%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="597" width="0.5731%" height="15" fill="rgb(228,99,48)"/><text x="12.2271%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="581" width="0.5731%" height="15" fill="rgb(253,11,6)"/><text x="12.2271%" y="591.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="565" width="0.5731%" height="15" fill="rgb(247,143,39)"/><text x="12.2271%" y="575.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (10 samples, 0.57%)</title><rect x="11.9771%" y="549" width="0.5731%" height="15" fill="rgb(236,97,10)"/><text x="12.2271%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.57%)</title><rect x="11.9771%" y="533" width="0.5731%" height="15" fill="rgb(233,208,19)"/><text x="12.2271%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.57%)</title><rect x="11.9771%" y="517" width="0.5731%" height="15" fill="rgb(216,164,2)"/><text x="12.2271%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.57%)</title><rect x="11.9771%" y="501" width="0.5731%" height="15" fill="rgb(220,129,5)"/><text x="12.2271%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="485" width="0.5731%" height="15" fill="rgb(242,17,10)"/><text x="12.2271%" y="495.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="469" width="0.5731%" height="15" fill="rgb(242,107,0)"/><text x="12.2271%" y="479.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (10 samples, 0.57%)</title><rect x="11.9771%" y="453" width="0.5731%" height="15" fill="rgb(251,28,31)"/><text x="12.2271%" y="463.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as core::ops::arith::Add&gt;::add (10 samples, 0.57%)</title><rect x="11.9771%" y="437" width="0.5731%" height="15" fill="rgb(233,223,10)"/><text x="12.2271%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.57%)</title><rect x="11.9771%" y="421" width="0.5731%" height="15" fill="rgb(215,21,27)"/><text x="12.2271%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.57%)</title><rect x="11.9771%" y="405" width="0.5731%" height="15" fill="rgb(232,23,21)"/><text x="12.2271%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (10 samples, 0.57%)</title><rect x="11.9771%" y="389" width="0.5731%" height="15" fill="rgb(244,5,23)"/><text x="12.2271%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.57%)</title><rect x="11.9771%" y="373" width="0.5731%" height="15" fill="rgb(226,81,46)"/><text x="12.2271%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (10 samples, 0.57%)</title><rect x="11.9771%" y="357" width="0.5731%" height="15" fill="rgb(247,70,30)"/><text x="12.2271%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (2 samples, 0.11%)</title><rect x="12.4355%" y="341" width="0.1146%" height="15" fill="rgb(212,68,19)"/><text x="12.6855%" y="351.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.11%)</title><rect x="12.4355%" y="325" width="0.1146%" height="15" fill="rgb(240,187,13)"/><text x="12.6855%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::add_usize (4 samples, 0.23%)</title><rect x="12.6074%" y="613" width="0.2292%" height="15" fill="rgb(223,113,26)"/><text x="12.8574%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.23%)</title><rect x="12.6074%" y="597" width="0.2292%" height="15" fill="rgb(206,192,2)"/><text x="12.8574%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.23%)</title><rect x="12.6074%" y="581" width="0.2292%" height="15" fill="rgb(241,108,4)"/><text x="12.8574%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.17%)</title><rect x="12.9513%" y="565" width="0.1719%" height="15" fill="rgb(247,173,49)"/><text x="13.2013%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="13.0086%" y="549" width="0.1146%" height="15" fill="rgb(224,114,35)"/><text x="13.2586%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.57%)</title><rect x="12.6074%" y="885" width="0.5731%" height="15" fill="rgb(245,159,27)"/><text x="12.8574%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.57%)</title><rect x="12.6074%" y="869" width="0.5731%" height="15" fill="rgb(245,172,44)"/><text x="12.8574%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (10 samples, 0.57%)</title><rect x="12.6074%" y="853" width="0.5731%" height="15" fill="rgb(236,23,11)"/><text x="12.8574%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (10 samples, 0.57%)</title><rect x="12.6074%" y="837" width="0.5731%" height="15" fill="rgb(205,117,38)"/><text x="12.8574%" y="847.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (10 samples, 0.57%)</title><rect x="12.6074%" y="821" width="0.5731%" height="15" fill="rgb(237,72,25)"/><text x="12.8574%" y="831.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (10 samples, 0.57%)</title><rect x="12.6074%" y="805" width="0.5731%" height="15" fill="rgb(244,70,9)"/><text x="12.8574%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.57%)</title><rect x="12.6074%" y="789" width="0.5731%" height="15" fill="rgb(217,125,39)"/><text x="12.8574%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.57%)</title><rect x="12.6074%" y="773" width="0.5731%" height="15" fill="rgb(235,36,10)"/><text x="12.8574%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.57%)</title><rect x="12.6074%" y="757" width="0.5731%" height="15" fill="rgb(251,123,47)"/><text x="12.8574%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (10 samples, 0.57%)</title><rect x="12.6074%" y="741" width="0.5731%" height="15" fill="rgb(221,13,13)"/><text x="12.8574%" y="751.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (10 samples, 0.57%)</title><rect x="12.6074%" y="725" width="0.5731%" height="15" fill="rgb(238,131,9)"/><text x="12.8574%" y="735.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (10 samples, 0.57%)</title><rect x="12.6074%" y="709" width="0.5731%" height="15" fill="rgb(211,50,8)"/><text x="12.8574%" y="719.50"></text></g><g><title>tfhe::numerics::poly_multiplier (10 samples, 0.57%)</title><rect x="12.6074%" y="693" width="0.5731%" height="15" fill="rgb(245,182,24)"/><text x="12.8574%" y="703.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (10 samples, 0.57%)</title><rect x="12.6074%" y="677" width="0.5731%" height="15" fill="rgb(242,14,37)"/><text x="12.8574%" y="687.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft_with_factors (10 samples, 0.57%)</title><rect x="12.6074%" y="661" width="0.5731%" height="15" fill="rgb(246,228,12)"/><text x="12.8574%" y="671.50"></text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::new (10 samples, 0.57%)</title><rect x="12.6074%" y="645" width="0.5731%" height="15" fill="rgb(213,55,15)"/><text x="12.8574%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.57%)</title><rect x="12.6074%" y="629" width="0.5731%" height="15" fill="rgb(209,9,3)"/><text x="12.8574%" y="639.50"></text></g><g><title>core::mem::swap (6 samples, 0.34%)</title><rect x="12.8367%" y="613" width="0.3438%" height="15" fill="rgb(230,59,30)"/><text x="13.0867%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.34%)</title><rect x="12.8367%" y="597" width="0.3438%" height="15" fill="rgb(209,121,21)"/><text x="13.0867%" y="607.50"></text></g><g><title>core::ptr::read (6 samples, 0.34%)</title><rect x="12.8367%" y="581" width="0.3438%" height="15" fill="rgb(220,109,13)"/><text x="13.0867%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::add_usize (4 samples, 0.23%)</title><rect x="13.1805%" y="597" width="0.2292%" height="15" fill="rgb(232,18,1)"/><text x="13.4305%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.23%)</title><rect x="13.1805%" y="581" width="0.2292%" height="15" fill="rgb(215,41,42)"/><text x="13.4305%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.52%)</title><rect x="13.1805%" y="613" width="0.5158%" height="15" fill="rgb(224,123,36)"/><text x="13.4305%" y="623.50"></text></g><g><title>core::mem::swap (5 samples, 0.29%)</title><rect x="13.4097%" y="597" width="0.2865%" height="15" fill="rgb(240,125,3)"/><text x="13.6597%" y="607.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.29%)</title><rect x="13.4097%" y="581" width="0.2865%" height="15" fill="rgb(205,98,50)"/><text x="13.6597%" y="591.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::cos (12 samples, 0.69%)</title><rect x="13.6963%" y="581" width="0.6877%" height="15" fill="rgb(205,185,37)"/><text x="13.9463%" y="591.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (12 samples, 0.69%)</title><rect x="13.6963%" y="565" width="0.6877%" height="15" fill="rgb(238,207,15)"/><text x="13.9463%" y="575.50"></text></g><g><title>[libm-2.31.so] (12 samples, 0.69%)</title><rect x="13.6963%" y="549" width="0.6877%" height="15" fill="rgb(213,199,42)"/><text x="13.9463%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30 samples, 1.72%)</title><rect x="13.1805%" y="885" width="1.7192%" height="15" fill="rgb(235,201,11)"/><text x="13.4305%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (30 samples, 1.72%)</title><rect x="13.1805%" y="869" width="1.7192%" height="15" fill="rgb(207,46,11)"/><text x="13.4305%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 1.72%)</title><rect x="13.1805%" y="853" width="1.7192%" height="15" fill="rgb(241,35,35)"/><text x="13.4305%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (30 samples, 1.72%)</title><rect x="13.1805%" y="837" width="1.7192%" height="15" fill="rgb(243,32,47)"/><text x="13.4305%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (30 samples, 1.72%)</title><rect x="13.1805%" y="821" width="1.7192%" height="15" fill="rgb(247,202,23)"/><text x="13.4305%" y="831.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (30 samples, 1.72%)</title><rect x="13.1805%" y="805" width="1.7192%" height="15" fill="rgb(219,102,11)"/><text x="13.4305%" y="815.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (30 samples, 1.72%)</title><rect x="13.1805%" y="789" width="1.7192%" height="15" fill="rgb(243,110,44)"/><text x="13.4305%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 1.72%)</title><rect x="13.1805%" y="773" width="1.7192%" height="15" fill="rgb(222,74,54)"/><text x="13.4305%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (30 samples, 1.72%)</title><rect x="13.1805%" y="757" width="1.7192%" height="15" fill="rgb(216,99,12)"/><text x="13.4305%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 1.72%)</title><rect x="13.1805%" y="741" width="1.7192%" height="15" fill="rgb(226,22,26)"/><text x="13.4305%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (30 samples, 1.72%)</title><rect x="13.1805%" y="725" width="1.7192%" height="15" fill="rgb(217,163,10)"/><text x="13.4305%" y="735.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (30 samples, 1.72%)</title><rect x="13.1805%" y="709" width="1.7192%" height="15" fill="rgb(213,25,53)"/><text x="13.4305%" y="719.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (30 samples, 1.72%)</title><rect x="13.1805%" y="693" width="1.7192%" height="15" fill="rgb(252,105,26)"/><text x="13.4305%" y="703.50"></text></g><g><title>tfhe::numerics::poly_multiplier (30 samples, 1.72%)</title><rect x="13.1805%" y="677" width="1.7192%" height="15" fill="rgb(220,39,43)"/><text x="13.4305%" y="687.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (30 samples, 1.72%)</title><rect x="13.1805%" y="661" width="1.7192%" height="15" fill="rgb(229,68,48)"/><text x="13.4305%" y="671.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft_with_factors (30 samples, 1.72%)</title><rect x="13.1805%" y="645" width="1.7192%" height="15" fill="rgb(252,8,32)"/><text x="13.4305%" y="655.50"></text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::new (30 samples, 1.72%)</title><rect x="13.1805%" y="629" width="1.7192%" height="15" fill="rgb(223,20,43)"/><text x="13.4305%" y="639.50"></text></g><g><title>rustfft::twiddles::single_twiddle (21 samples, 1.20%)</title><rect x="13.6963%" y="613" width="1.2034%" height="15" fill="rgb(229,81,49)"/><text x="13.9463%" y="623.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::from_polar (21 samples, 1.20%)</title><rect x="13.6963%" y="597" width="1.2034%" height="15" fill="rgb(236,28,36)"/><text x="13.9463%" y="607.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sin (9 samples, 0.52%)</title><rect x="14.3840%" y="581" width="0.5158%" height="15" fill="rgb(249,185,26)"/><text x="14.6340%" y="591.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sin (9 samples, 0.52%)</title><rect x="14.3840%" y="565" width="0.5158%" height="15" fill="rgb(249,174,33)"/><text x="14.6340%" y="575.50"></text></g><g><title>[libm-2.31.so] (9 samples, 0.52%)</title><rect x="14.3840%" y="549" width="0.5158%" height="15" fill="rgb(233,201,37)"/><text x="14.6340%" y="559.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (5 samples, 0.29%)</title><rect x="15.3009%" y="533" width="0.2865%" height="15" fill="rgb(221,78,26)"/><text x="15.5509%" y="543.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.23%)</title><rect x="15.3582%" y="517" width="0.2292%" height="15" fill="rgb(250,127,30)"/><text x="15.6082%" y="527.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (7 samples, 0.40%)</title><rect x="15.8739%" y="501" width="0.4011%" height="15" fill="rgb(230,49,44)"/><text x="16.1239%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.29%)</title><rect x="15.9885%" y="485" width="0.2865%" height="15" fill="rgb(229,67,23)"/><text x="16.2385%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::add_usize (23 samples, 1.32%)</title><rect x="15.8166%" y="517" width="1.3181%" height="15" fill="rgb(249,83,47)"/><text x="16.0666%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (15 samples, 0.86%)</title><rect x="16.2751%" y="501" width="0.8596%" height="15" fill="rgb(215,43,3)"/><text x="16.5251%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (9 samples, 0.52%)</title><rect x="16.6189%" y="485" width="0.5158%" height="15" fill="rgb(238,154,13)"/><text x="16.8689%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.17%)</title><rect x="17.3066%" y="485" width="0.1719%" height="15" fill="rgb(219,56,2)"/><text x="17.5566%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="17.3639%" y="469" width="0.1146%" height="15" fill="rgb(233,0,4)"/><text x="17.6139%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (34 samples, 1.95%)</title><rect x="15.6447%" y="533" width="1.9484%" height="15" fill="rgb(235,30,7)"/><text x="15.8947%" y="543.50">c..</text></g><g><title>core::mem::swap (7 samples, 0.40%)</title><rect x="17.1920%" y="517" width="0.4011%" height="15" fill="rgb(250,79,13)"/><text x="17.4420%" y="527.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.40%)</title><rect x="17.1920%" y="501" width="0.4011%" height="15" fill="rgb(211,146,34)"/><text x="17.4420%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 2.75%)</title><rect x="15.0143%" y="693" width="2.7507%" height="15" fill="rgb(228,22,38)"/><text x="15.2643%" y="703.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 2.75%)</title><rect x="15.0143%" y="677" width="2.7507%" height="15" fill="rgb(235,168,5)"/><text x="15.2643%" y="687.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 2.75%)</title><rect x="15.0143%" y="661" width="2.7507%" height="15" fill="rgb(221,155,16)"/><text x="15.2643%" y="671.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (48 samples, 2.75%)</title><rect x="15.0143%" y="645" width="2.7507%" height="15" fill="rgb(215,215,53)"/><text x="15.2643%" y="655.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (48 samples, 2.75%)</title><rect x="15.0143%" y="629" width="2.7507%" height="15" fill="rgb(223,4,10)"/><text x="15.2643%" y="639.50">co..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (48 samples, 2.75%)</title><rect x="15.0143%" y="613" width="2.7507%" height="15" fill="rgb(234,103,6)"/><text x="15.2643%" y="623.50">tf..</text></g><g><title>tfhe::numerics::poly_multiplier (48 samples, 2.75%)</title><rect x="15.0143%" y="597" width="2.7507%" height="15" fill="rgb(227,97,0)"/><text x="15.2643%" y="607.50">tf..</text></g><g><title>alloc::vec::from_elem (46 samples, 2.64%)</title><rect x="15.1289%" y="581" width="2.6361%" height="15" fill="rgb(234,150,53)"/><text x="15.3789%" y="591.50">al..</text></g><g><title>&lt;T as alloc::vec::SpecFromElem&gt;::from_elem (46 samples, 2.64%)</title><rect x="15.1289%" y="565" width="2.6361%" height="15" fill="rgb(228,201,54)"/><text x="15.3789%" y="575.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_with (45 samples, 2.58%)</title><rect x="15.1862%" y="549" width="2.5788%" height="15" fill="rgb(222,22,37)"/><text x="15.4362%" y="559.50">al..</text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="17.6504%" y="533" width="0.1146%" height="15" fill="rgb(237,53,32)"/><text x="17.9004%" y="543.50"></text></g><g><title>&lt;core::slice::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="17.9370%" y="133" width="0.1719%" height="15" fill="rgb(233,25,53)"/><text x="18.1870%" y="143.50"></text></g><g><title>encrypt::main (57 samples, 3.27%)</title><rect x="14.8997%" y="885" width="3.2665%" height="15" fill="rgb(210,40,34)"/><text x="15.1497%" y="895.50">enc..</text></g><g><title>tfhe::bootstrapping::new_random_gate_bootstrapping_secret_keyset (57 samples, 3.27%)</title><rect x="14.8997%" y="869" width="3.2665%" height="15" fill="rgb(241,220,44)"/><text x="15.1497%" y="879.50">tfh..</text></g><g><title>tfhe::lwe::LweBootstrappingKey::create (57 samples, 3.27%)</title><rect x="14.8997%" y="853" width="3.2665%" height="15" fill="rgb(235,28,35)"/><text x="15.1497%" y="863.50">tfh..</text></g><g><title>tfhe::tgsw::TGswKey::encrypt (56 samples, 3.21%)</title><rect x="14.9570%" y="837" width="3.2092%" height="15" fill="rgb(210,56,17)"/><text x="15.2070%" y="847.50">tfh..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (55 samples, 3.15%)</title><rect x="15.0143%" y="821" width="3.1519%" height="15" fill="rgb(224,130,29)"/><text x="15.2643%" y="831.50">tfh..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (55 samples, 3.15%)</title><rect x="15.0143%" y="805" width="3.1519%" height="15" fill="rgb(235,212,8)"/><text x="15.2643%" y="815.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (55 samples, 3.15%)</title><rect x="15.0143%" y="789" width="3.1519%" height="15" fill="rgb(223,33,50)"/><text x="15.2643%" y="799.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (55 samples, 3.15%)</title><rect x="15.0143%" y="773" width="3.1519%" height="15" fill="rgb(219,149,13)"/><text x="15.2643%" y="783.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (55 samples, 3.15%)</title><rect x="15.0143%" y="757" width="3.1519%" height="15" fill="rgb(250,156,29)"/><text x="15.2643%" y="767.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (55 samples, 3.15%)</title><rect x="15.0143%" y="741" width="3.1519%" height="15" fill="rgb(216,193,19)"/><text x="15.2643%" y="751.50">cor..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (55 samples, 3.15%)</title><rect x="15.0143%" y="725" width="3.1519%" height="15" fill="rgb(216,135,14)"/><text x="15.2643%" y="735.50">tfh..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (55 samples, 3.15%)</title><rect x="15.0143%" y="709" width="3.1519%" height="15" fill="rgb(241,47,5)"/><text x="15.2643%" y="719.50">tfh..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.40%)</title><rect x="17.7650%" y="693" width="0.4011%" height="15" fill="rgb(233,42,35)"/><text x="18.0150%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.40%)</title><rect x="17.7650%" y="677" width="0.4011%" height="15" fill="rgb(231,13,6)"/><text x="18.0150%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (7 samples, 0.40%)</title><rect x="17.7650%" y="661" width="0.4011%" height="15" fill="rgb(207,181,40)"/><text x="18.0150%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.40%)</title><rect x="17.7650%" y="645" width="0.4011%" height="15" fill="rgb(254,173,49)"/><text x="18.0150%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.40%)</title><rect x="17.7650%" y="629" width="0.4011%" height="15" fill="rgb(221,1,38)"/><text x="18.0150%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.40%)</title><rect x="17.7650%" y="613" width="0.4011%" height="15" fill="rgb(206,124,46)"/><text x="18.0150%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.40%)</title><rect x="17.7650%" y="597" width="0.4011%" height="15" fill="rgb(249,21,11)"/><text x="18.0150%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.40%)</title><rect x="17.7650%" y="581" width="0.4011%" height="15" fill="rgb(222,201,40)"/><text x="18.0150%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.40%)</title><rect x="17.7650%" y="565" width="0.4011%" height="15" fill="rgb(235,61,29)"/><text x="18.0150%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (7 samples, 0.40%)</title><rect x="17.7650%" y="549" width="0.4011%" height="15" fill="rgb(219,207,3)"/><text x="18.0150%" y="559.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (7 samples, 0.40%)</title><rect x="17.7650%" y="533" width="0.4011%" height="15" fill="rgb(222,56,46)"/><text x="18.0150%" y="543.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (7 samples, 0.40%)</title><rect x="17.7650%" y="517" width="0.4011%" height="15" fill="rgb(239,76,54)"/><text x="18.0150%" y="527.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as tfhe::polynomial::Polynomial&lt;i32&gt;&gt;::uniform (7 samples, 0.40%)</title><rect x="17.7650%" y="501" width="0.4011%" height="15" fill="rgb(231,124,27)"/><text x="18.0150%" y="511.50"></text></g><g><title>tfhe::polynomial::uniform (7 samples, 0.40%)</title><rect x="17.7650%" y="485" width="0.4011%" height="15" fill="rgb(249,195,6)"/><text x="18.0150%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.40%)</title><rect x="17.7650%" y="469" width="0.4011%" height="15" fill="rgb(237,174,47)"/><text x="18.0150%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.40%)</title><rect x="17.7650%" y="453" width="0.4011%" height="15" fill="rgb(206,201,31)"/><text x="18.0150%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (7 samples, 0.40%)</title><rect x="17.7650%" y="437" width="0.4011%" height="15" fill="rgb(231,57,52)"/><text x="18.0150%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.40%)</title><rect x="17.7650%" y="421" width="0.4011%" height="15" fill="rgb(248,177,22)"/><text x="18.0150%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.40%)</title><rect x="17.7650%" y="405" width="0.4011%" height="15" fill="rgb(215,211,37)"/><text x="18.0150%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.40%)</title><rect x="17.7650%" y="389" width="0.4011%" height="15" fill="rgb(241,128,51)"/><text x="18.0150%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.40%)</title><rect x="17.7650%" y="373" width="0.4011%" height="15" fill="rgb(227,165,31)"/><text x="18.0150%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.40%)</title><rect x="17.7650%" y="357" width="0.4011%" height="15" fill="rgb(228,167,24)"/><text x="18.0150%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (7 samples, 0.40%)</title><rect x="17.7650%" y="341" width="0.4011%" height="15" fill="rgb(228,143,12)"/><text x="18.0150%" y="351.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (7 samples, 0.40%)</title><rect x="17.7650%" y="325" width="0.4011%" height="15" fill="rgb(249,149,8)"/><text x="18.0150%" y="335.50"></text></g><g><title>tfhe::polynomial::uniform::_{{closure}} (7 samples, 0.40%)</title><rect x="17.7650%" y="309" width="0.4011%" height="15" fill="rgb(243,35,44)"/><text x="18.0150%" y="319.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::Distribution&lt;X&gt;&gt;::sample (7 samples, 0.40%)</title><rect x="17.7650%" y="293" width="0.4011%" height="15" fill="rgb(246,89,9)"/><text x="18.0150%" y="303.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;i32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (7 samples, 0.40%)</title><rect x="17.7650%" y="277" width="0.4011%" height="15" fill="rgb(233,213,13)"/><text x="18.0150%" y="287.50"></text></g><g><title>rand::Rng::gen (7 samples, 0.40%)</title><rect x="17.7650%" y="261" width="0.4011%" height="15" fill="rgb(233,141,41)"/><text x="18.0150%" y="271.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (7 samples, 0.40%)</title><rect x="17.7650%" y="245" width="0.4011%" height="15" fill="rgb(239,167,4)"/><text x="18.0150%" y="255.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (7 samples, 0.40%)</title><rect x="17.7650%" y="229" width="0.4011%" height="15" fill="rgb(209,217,16)"/><text x="18.0150%" y="239.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (7 samples, 0.40%)</title><rect x="17.7650%" y="213" width="0.4011%" height="15" fill="rgb(219,88,35)"/><text x="18.0150%" y="223.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (7 samples, 0.40%)</title><rect x="17.7650%" y="197" width="0.4011%" height="15" fill="rgb(220,193,23)"/><text x="18.0150%" y="207.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (6 samples, 0.34%)</title><rect x="17.8223%" y="181" width="0.3438%" height="15" fill="rgb(230,90,52)"/><text x="18.0723%" y="191.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (6 samples, 0.34%)</title><rect x="17.8223%" y="165" width="0.3438%" height="15" fill="rgb(252,106,19)"/><text x="18.0723%" y="175.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (6 samples, 0.34%)</title><rect x="17.8223%" y="149" width="0.3438%" height="15" fill="rgb(206,74,20)"/><text x="18.0723%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::TrustedRandomAccess&gt;::get_unchecked (4 samples, 0.23%)</title><rect x="18.6819%" y="789" width="0.2292%" height="15" fill="rgb(230,138,44)"/><text x="18.9319%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::TrustedRandomAccess&gt;::get_unchecked (3 samples, 0.17%)</title><rect x="18.7393%" y="773" width="0.1719%" height="15" fill="rgb(235,182,43)"/><text x="18.9893%" y="783.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::adapters::zip::TrustedRandomAccess&gt;::get_unchecked (3 samples, 0.17%)</title><rect x="18.7393%" y="757" width="0.1719%" height="15" fill="rgb(242,16,51)"/><text x="18.9893%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.11%)</title><rect x="18.7966%" y="741" width="0.1146%" height="15" fill="rgb(248,9,4)"/><text x="19.0466%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::TrustedRandomAccess&gt;::get_unchecked (5 samples, 0.29%)</title><rect x="18.6819%" y="805" width="0.2865%" height="15" fill="rgb(210,31,22)"/><text x="18.9319%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.46%)</title><rect x="18.6246%" y="837" width="0.4585%" height="15" fill="rgb(239,54,39)"/><text x="18.8746%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8 samples, 0.46%)</title><rect x="18.6246%" y="821" width="0.4585%" height="15" fill="rgb(230,99,41)"/><text x="18.8746%" y="831.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::adapters::zip::TrustedRandomAccess&gt;::get_unchecked (2 samples, 0.11%)</title><rect x="18.9685%" y="805" width="0.1146%" height="15" fill="rgb(253,106,12)"/><text x="19.2185%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.11%)</title><rect x="19.3123%" y="773" width="0.1146%" height="15" fill="rgb(213,46,41)"/><text x="19.5623%" y="783.50"></text></g><g><title>core::mem::replace (5 samples, 0.29%)</title><rect x="19.2550%" y="821" width="0.2865%" height="15" fill="rgb(215,133,35)"/><text x="19.5050%" y="831.50"></text></g><g><title>core::mem::swap (4 samples, 0.23%)</title><rect x="19.3123%" y="805" width="0.2292%" height="15" fill="rgb(213,28,5)"/><text x="19.5623%" y="815.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.23%)</title><rect x="19.3123%" y="789" width="0.2292%" height="15" fill="rgb(215,77,49)"/><text x="19.5623%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.11%)</title><rect x="19.7135%" y="805" width="0.1146%" height="15" fill="rgb(248,100,22)"/><text x="19.9635%" y="815.50"></text></g><g><title>&lt;core::slice::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.97%)</title><rect x="19.0831%" y="837" width="0.9742%" height="15" fill="rgb(208,67,9)"/><text x="19.3331%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (8 samples, 0.46%)</title><rect x="19.5989%" y="821" width="0.4585%" height="15" fill="rgb(219,133,21)"/><text x="19.8489%" y="831.50"></text></g><g><title>core::slice::from_raw_parts_mut (4 samples, 0.23%)</title><rect x="19.8281%" y="805" width="0.2292%" height="15" fill="rgb(246,46,29)"/><text x="20.0781%" y="815.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.11%)</title><rect x="19.9427%" y="789" width="0.1146%" height="15" fill="rgb(246,185,52)"/><text x="20.1927%" y="799.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt;&gt;::from_lanes (2 samples, 0.11%)</title><rect x="20.0573%" y="837" width="0.1146%" height="15" fill="rgb(252,136,11)"/><text x="20.3073%" y="847.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_undefined_si256 (3 samples, 0.17%)</title><rect x="20.3438%" y="805" width="0.1719%" height="15" fill="rgb(219,138,53)"/><text x="20.5938%" y="815.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt;&gt;::to_lanes (10 samples, 0.57%)</title><rect x="20.1719%" y="837" width="0.5731%" height="15" fill="rgb(211,51,23)"/><text x="20.4219%" y="847.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (8 samples, 0.46%)</title><rect x="20.2865%" y="821" width="0.4585%" height="15" fill="rgb(247,221,28)"/><text x="20.5365%" y="831.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.23%)</title><rect x="20.5158%" y="805" width="0.2292%" height="15" fill="rgb(251,222,45)"/><text x="20.7658%" y="815.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (6 samples, 0.34%)</title><rect x="20.7450%" y="837" width="0.3438%" height="15" fill="rgb(217,162,53)"/><text x="20.9950%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (6 samples, 0.34%)</title><rect x="20.7450%" y="821" width="0.3438%" height="15" fill="rgb(229,93,14)"/><text x="20.9950%" y="831.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (3 samples, 0.17%)</title><rect x="20.9169%" y="805" width="0.1719%" height="15" fill="rgb(209,67,49)"/><text x="21.1669%" y="815.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::types::Vec4&lt;u32&gt;&gt;::insert (3 samples, 0.17%)</title><rect x="21.0888%" y="837" width="0.1719%" height="15" fill="rgb(213,87,29)"/><text x="21.3388%" y="847.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (2 samples, 0.11%)</title><rect x="21.1461%" y="821" width="0.1146%" height="15" fill="rgb(205,151,52)"/><text x="21.3961%" y="831.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::add_usize (4 samples, 0.23%)</title><rect x="21.2607%" y="821" width="0.2292%" height="15" fill="rgb(253,215,39)"/><text x="21.5107%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_add (4 samples, 0.23%)</title><rect x="21.2607%" y="805" width="0.2292%" height="15" fill="rgb(221,220,41)"/><text x="21.5107%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (4 samples, 0.23%)</title><rect x="21.2607%" y="789" width="0.2292%" height="15" fill="rgb(218,133,21)"/><text x="21.5107%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.40%)</title><rect x="21.2607%" y="837" width="0.4011%" height="15" fill="rgb(221,193,43)"/><text x="21.5107%" y="847.50"></text></g><g><title>core::mem::swap (3 samples, 0.17%)</title><rect x="21.4900%" y="821" width="0.1719%" height="15" fill="rgb(240,128,52)"/><text x="21.7400%" y="831.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.17%)</title><rect x="21.4900%" y="805" width="0.1719%" height="15" fill="rgb(253,114,12)"/><text x="21.7400%" y="815.50"></text></g><g><title>core::ptr::read (3 samples, 0.17%)</title><rect x="21.4900%" y="789" width="0.1719%" height="15" fill="rgb(215,223,47)"/><text x="21.7400%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.11%)</title><rect x="21.5473%" y="773" width="0.1146%" height="15" fill="rgb(248,225,23)"/><text x="21.7973%" y="783.50"></text></g><g><title>core::array::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T: _]&gt;::into_iter (3 samples, 0.17%)</title><rect x="21.6619%" y="821" width="0.1719%" height="15" fill="rgb(250,108,0)"/><text x="21.9119%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.11%)</title><rect x="21.7192%" y="805" width="0.1146%" height="15" fill="rgb(228,208,7)"/><text x="21.9692%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (4 samples, 0.23%)</title><rect x="21.6619%" y="837" width="0.2292%" height="15" fill="rgb(244,45,10)"/><text x="21.9119%" y="847.50"></text></g><g><title>ppv_lite86::types::Machine::vec (2 samples, 0.11%)</title><rect x="21.9484%" y="837" width="0.1146%" height="15" fill="rgb(207,125,25)"/><text x="22.1984%" y="847.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::types::MultiLane&lt;[u32: 4]&gt;&gt;::from_lanes (2 samples, 0.11%)</title><rect x="21.9484%" y="821" width="0.1146%" height="15" fill="rgb(210,195,18)"/><text x="22.1984%" y="831.50"></text></g><g><title>rand_chacha::guts::ChaCha::pos64 (2 samples, 0.11%)</title><rect x="22.0630%" y="837" width="0.1146%" height="15" fill="rgb(249,80,12)"/><text x="22.3130%" y="847.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::types::Vec4&lt;u32&gt;&gt;::extract (2 samples, 0.11%)</title><rect x="22.0630%" y="821" width="0.1146%" height="15" fill="rgb(221,65,9)"/><text x="22.3130%" y="831.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::types::MultiLane&lt;[u32: 4]&gt;&gt;::to_lanes (2 samples, 0.11%)</title><rect x="22.0630%" y="805" width="0.1146%" height="15" fill="rgb(235,49,36)"/><text x="22.3130%" y="815.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words1230 (3 samples, 0.17%)</title><rect x="22.2923%" y="821" width="0.1719%" height="15" fill="rgb(225,32,20)"/><text x="22.5423%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.17%)</title><rect x="22.2923%" y="805" width="0.1719%" height="15" fill="rgb(215,141,46)"/><text x="22.5423%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.17%)</title><rect x="22.4642%" y="805" width="0.1719%" height="15" fill="rgb(250,160,47)"/><text x="22.7142%" y="815.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words2301 (4 samples, 0.23%)</title><rect x="22.4642%" y="821" width="0.2292%" height="15" fill="rgb(216,222,40)"/><text x="22.7142%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (10 samples, 0.57%)</title><rect x="22.7507%" y="805" width="0.5731%" height="15" fill="rgb(234,217,39)"/><text x="23.0007%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.17%)</title><rect x="23.1519%" y="789" width="0.1719%" height="15" fill="rgb(207,178,40)"/><text x="23.4019%" y="799.50"></text></g><g><title>rand_chacha::guts::diagonalize (21 samples, 1.20%)</title><rect x="22.1777%" y="837" width="1.2034%" height="15" fill="rgb(221,136,13)"/><text x="22.4277%" y="847.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words3012 (12 samples, 0.69%)</title><rect x="22.6934%" y="821" width="0.6877%" height="15" fill="rgb(249,199,10)"/><text x="22.9434%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (64 samples, 3.67%)</title><rect x="24.5272%" y="789" width="3.6676%" height="15" fill="rgb(249,222,13)"/><text x="24.7772%" y="799.50">core..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.69%)</title><rect x="27.5072%" y="773" width="0.6877%" height="15" fill="rgb(244,185,38)"/><text x="27.7572%" y="783.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (3 samples, 0.17%)</title><rect x="28.0229%" y="757" width="0.1719%" height="15" fill="rgb(236,202,9)"/><text x="28.2729%" y="767.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (78 samples, 4.47%)</title><rect x="23.9542%" y="821" width="4.4699%" height="15" fill="rgb(250,229,37)"/><text x="24.2042%" y="831.50">&lt;ppv_..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (72 samples, 4.13%)</title><rect x="24.2980%" y="805" width="4.1261%" height="15" fill="rgb(206,174,23)"/><text x="24.5480%" y="815.50">&lt;ppv..</text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt;::new (4 samples, 0.23%)</title><rect x="28.1948%" y="789" width="0.2292%" height="15" fill="rgb(211,33,43)"/><text x="28.4448%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (77 samples, 4.41%)</title><rect x="28.5960%" y="805" width="4.4126%" height="15" fill="rgb(245,58,50)"/><text x="28.8460%" y="815.50">core:..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (19 samples, 1.09%)</title><rect x="31.9198%" y="789" width="1.0888%" height="15" fill="rgb(244,68,36)"/><text x="32.1698%" y="799.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (3 samples, 0.17%)</title><rect x="32.8367%" y="773" width="0.1719%" height="15" fill="rgb(232,229,15)"/><text x="33.0867%" y="783.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (84 samples, 4.81%)</title><rect x="28.4241%" y="821" width="4.8138%" height="15" fill="rgb(254,30,23)"/><text x="28.6741%" y="831.50">&lt;ppv_l..</text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt;::new (4 samples, 0.23%)</title><rect x="33.0086%" y="805" width="0.2292%" height="15" fill="rgb(235,160,14)"/><text x="33.2586%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (17 samples, 0.97%)</title><rect x="33.2951%" y="805" width="0.9742%" height="15" fill="rgb(212,155,44)"/><text x="33.5451%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (5 samples, 0.29%)</title><rect x="33.9828%" y="789" width="0.2865%" height="15" fill="rgb(226,2,50)"/><text x="34.2328%" y="799.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (4 samples, 0.23%)</title><rect x="34.2693%" y="805" width="0.2292%" height="15" fill="rgb(234,177,6)"/><text x="34.5193%" y="815.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (4 samples, 0.23%)</title><rect x="34.2693%" y="789" width="0.2292%" height="15" fill="rgb(217,24,9)"/><text x="34.5193%" y="799.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (23 samples, 1.32%)</title><rect x="33.2378%" y="821" width="1.3181%" height="15" fill="rgb(220,13,46)"/><text x="33.4878%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (20 samples, 1.15%)</title><rect x="34.8424%" y="805" width="1.1461%" height="15" fill="rgb(239,221,27)"/><text x="35.0924%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.23%)</title><rect x="35.7593%" y="789" width="0.2292%" height="15" fill="rgb(222,198,25)"/><text x="36.0093%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (10 samples, 0.57%)</title><rect x="35.9885%" y="805" width="0.5731%" height="15" fill="rgb(211,99,13)"/><text x="36.2385%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (12 samples, 0.69%)</title><rect x="36.5616%" y="805" width="0.6877%" height="15" fill="rgb(232,111,31)"/><text x="36.8116%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.17%)</title><rect x="37.0774%" y="789" width="0.1719%" height="15" fill="rgb(245,82,37)"/><text x="37.3274%" y="799.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (48 samples, 2.75%)</title><rect x="34.5559%" y="821" width="2.7507%" height="15" fill="rgb(227,149,46)"/><text x="34.8059%" y="831.50">&lt;p..</text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (16 samples, 0.92%)</title><rect x="37.4212%" y="805" width="0.9169%" height="15" fill="rgb(218,36,50)"/><text x="37.6712%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.40%)</title><rect x="37.9370%" y="789" width="0.4011%" height="15" fill="rgb(226,80,48)"/><text x="38.1870%" y="799.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (3 samples, 0.17%)</title><rect x="38.1662%" y="773" width="0.1719%" height="15" fill="rgb(238,224,15)"/><text x="38.4162%" y="783.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (4 samples, 0.23%)</title><rect x="38.3381%" y="805" width="0.2292%" height="15" fill="rgb(241,136,10)"/><text x="38.5881%" y="815.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (4 samples, 0.23%)</title><rect x="38.3381%" y="789" width="0.2292%" height="15" fill="rgb(208,32,45)"/><text x="38.5881%" y="799.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (23 samples, 1.32%)</title><rect x="37.3066%" y="821" width="1.3181%" height="15" fill="rgb(207,135,9)"/><text x="37.5566%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (10 samples, 0.57%)</title><rect x="38.9112%" y="805" width="0.5731%" height="15" fill="rgb(206,86,44)"/><text x="39.1612%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.17%)</title><rect x="39.3123%" y="789" width="0.1719%" height="15" fill="rgb(245,177,15)"/><text x="39.5623%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (8 samples, 0.46%)</title><rect x="39.4842%" y="805" width="0.4585%" height="15" fill="rgb(206,64,50)"/><text x="39.7342%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (11 samples, 0.63%)</title><rect x="39.9427%" y="805" width="0.6304%" height="15" fill="rgb(234,36,40)"/><text x="40.1927%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.17%)</title><rect x="40.4011%" y="789" width="0.1719%" height="15" fill="rgb(213,64,8)"/><text x="40.6511%" y="799.50"></text></g><g><title>rand_chacha::guts::round (301 samples, 17.25%)</title><rect x="23.3811%" y="837" width="17.2493%" height="15" fill="rgb(210,75,36)"/><text x="23.6311%" y="847.50">rand_chacha::guts::round</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (35 samples, 2.01%)</title><rect x="38.6246%" y="821" width="2.0057%" height="15" fill="rgb(229,88,21)"/><text x="38.8746%" y="831.50">&lt;..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words1230 (3 samples, 0.17%)</title><rect x="40.6877%" y="821" width="0.1719%" height="15" fill="rgb(252,204,47)"/><text x="40.9377%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.17%)</title><rect x="40.6877%" y="805" width="0.1719%" height="15" fill="rgb(208,77,27)"/><text x="40.9377%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.11%)</title><rect x="40.7450%" y="789" width="0.1146%" height="15" fill="rgb(221,76,26)"/><text x="40.9950%" y="799.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words2301 (6 samples, 0.34%)</title><rect x="40.8596%" y="821" width="0.3438%" height="15" fill="rgb(225,139,18)"/><text x="41.1096%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.34%)</title><rect x="40.8596%" y="805" width="0.3438%" height="15" fill="rgb(230,137,11)"/><text x="41.1096%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.11%)</title><rect x="41.0888%" y="789" width="0.1146%" height="15" fill="rgb(212,28,1)"/><text x="41.3388%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.34%)</title><rect x="41.2607%" y="805" width="0.3438%" height="15" fill="rgb(248,164,17)"/><text x="41.5107%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.11%)</title><rect x="41.4900%" y="789" width="0.1146%" height="15" fill="rgb(222,171,42)"/><text x="41.7400%" y="799.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words3012 (9 samples, 0.52%)</title><rect x="41.2034%" y="821" width="0.5158%" height="15" fill="rgb(243,84,45)"/><text x="41.4534%" y="831.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt;::new (2 samples, 0.11%)</title><rect x="41.6046%" y="805" width="0.1146%" height="15" fill="rgb(252,49,23)"/><text x="41.8546%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="41.6046%" y="789" width="0.1146%" height="15" fill="rgb(215,19,7)"/><text x="41.8546%" y="799.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (412 samples, 23.61%)</title><rect x="18.2235%" y="885" width="23.6103%" height="15" fill="rgb(238,81,41)"/><text x="18.4735%" y="895.50">rand_chacha::guts::refill_wide::impl_a..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (412 samples, 23.61%)</title><rect x="18.2235%" y="869" width="23.6103%" height="15" fill="rgb(210,199,37)"/><text x="18.4735%" y="879.50">rand_chacha::guts::refill_wide::fn_impl</text></g><g><title>rand_chacha::guts::refill_wide_impl (412 samples, 23.61%)</title><rect x="18.2235%" y="853" width="23.6103%" height="15" fill="rgb(244,192,49)"/><text x="18.4735%" y="863.50">rand_chacha::guts::refill_wide_impl</text></g><g><title>rand_chacha::guts::undiagonalize (21 samples, 1.20%)</title><rect x="40.6304%" y="837" width="1.2034%" height="15" fill="rgb(226,211,11)"/><text x="40.8804%" y="847.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.46%)</title><rect x="45.5587%" y="837" width="0.4585%" height="15" fill="rgb(236,162,54)"/><text x="45.8087%" y="847.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (2 samples, 0.11%)</title><rect x="45.9026%" y="821" width="0.1146%" height="15" fill="rgb(220,229,9)"/><text x="46.1526%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (5 samples, 0.29%)</title><rect x="46.3037%" y="821" width="0.2865%" height="15" fill="rgb(250,87,22)"/><text x="46.5537%" y="831.50"></text></g><g><title>&lt;&amp;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&lt;num_complex::Complex&lt;T&gt;&gt;&gt;::add (35 samples, 2.01%)</title><rect x="44.9857%" y="853" width="2.0057%" height="15" fill="rgb(239,43,17)"/><text x="45.2357%" y="863.50">&lt;..</text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&gt;::add (17 samples, 0.97%)</title><rect x="46.0172%" y="837" width="0.9742%" height="15" fill="rgb(231,177,25)"/><text x="46.2672%" y="847.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::new (7 samples, 0.40%)</title><rect x="46.5903%" y="821" width="0.4011%" height="15" fill="rgb(219,179,1)"/><text x="46.8403%" y="831.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 1.32%)</title><rect x="47.7364%" y="837" width="1.3181%" height="15" fill="rgb(238,219,53)"/><text x="47.9864%" y="847.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (6 samples, 0.34%)</title><rect x="48.7106%" y="821" width="0.3438%" height="15" fill="rgb(232,167,36)"/><text x="48.9606%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (3 samples, 0.17%)</title><rect x="51.7479%" y="821" width="0.1719%" height="15" fill="rgb(244,19,51)"/><text x="51.9979%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (14 samples, 0.80%)</title><rect x="51.9198%" y="821" width="0.8023%" height="15" fill="rgb(224,6,22)"/><text x="52.1698%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (8 samples, 0.46%)</title><rect x="52.7221%" y="821" width="0.4585%" height="15" fill="rgb(224,145,5)"/><text x="52.9721%" y="831.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (6 samples, 0.34%)</title><rect x="53.1805%" y="821" width="0.3438%" height="15" fill="rgb(234,130,49)"/><text x="53.4305%" y="831.50"></text></g><g><title>&lt;&amp;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&lt;num_complex::Complex&lt;T&gt;&gt;&gt;::mul (124 samples, 7.11%)</title><rect x="46.9914%" y="853" width="7.1060%" height="15" fill="rgb(254,6,2)"/><text x="47.2414%" y="863.50">&lt;&amp;num_comp..</text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (88 samples, 5.04%)</title><rect x="49.0544%" y="837" width="5.0430%" height="15" fill="rgb(208,96,46)"/><text x="49.3044%" y="847.50">&lt;num_c..</text></g><g><title>num_complex::Complex&lt;T&gt;::new (10 samples, 0.57%)</title><rect x="53.5244%" y="821" width="0.5731%" height="15" fill="rgb(239,3,39)"/><text x="53.7744%" y="831.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 1.55%)</title><rect x="54.3840%" y="837" width="1.5473%" height="15" fill="rgb(233,210,1)"/><text x="54.6340%" y="847.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (10 samples, 0.57%)</title><rect x="55.3582%" y="821" width="0.5731%" height="15" fill="rgb(244,137,37)"/><text x="55.6082%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (6 samples, 0.34%)</title><rect x="56.3324%" y="821" width="0.3438%" height="15" fill="rgb(240,136,2)"/><text x="56.5824%" y="831.50"></text></g><g><title>&lt;&amp;num_complex::Complex&lt;T&gt; as core::ops::arith::Sub&lt;num_complex::Complex&lt;T&gt;&gt;&gt;::sub (52 samples, 2.98%)</title><rect x="54.0974%" y="853" width="2.9799%" height="15" fill="rgb(239,18,37)"/><text x="54.3474%" y="863.50">&lt;&amp;n..</text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Sub&gt;::sub (20 samples, 1.15%)</title><rect x="55.9312%" y="837" width="1.1461%" height="15" fill="rgb(218,185,22)"/><text x="56.1812%" y="847.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::new (7 samples, 0.40%)</title><rect x="56.6762%" y="821" width="0.4011%" height="15" fill="rgb(225,218,4)"/><text x="56.9262%" y="831.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.11%)</title><rect x="57.0774%" y="853" width="0.1146%" height="15" fill="rgb(230,182,32)"/><text x="57.3274%" y="863.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Add&gt;::add (5 samples, 0.29%)</title><rect x="57.2493%" y="853" width="0.2865%" height="15" fill="rgb(242,56,43)"/><text x="57.4993%" y="863.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Sub&gt;::sub (8 samples, 0.46%)</title><rect x="57.5358%" y="853" width="0.4585%" height="15" fill="rgb(233,99,24)"/><text x="57.7858%" y="863.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (4 samples, 0.23%)</title><rect x="57.7650%" y="837" width="0.2292%" height="15" fill="rgb(234,209,42)"/><text x="58.0150%" y="847.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::add_usize (17 samples, 0.97%)</title><rect x="58.4527%" y="837" width="0.9742%" height="15" fill="rgb(227,7,12)"/><text x="58.7027%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (16 samples, 0.92%)</title><rect x="58.5100%" y="821" width="0.9169%" height="15" fill="rgb(245,203,43)"/><text x="58.7600%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.63%)</title><rect x="58.7966%" y="805" width="0.6304%" height="15" fill="rgb(238,205,33)"/><text x="59.0466%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.11%)</title><rect x="59.4269%" y="837" width="0.1146%" height="15" fill="rgb(231,56,7)"/><text x="59.6769%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.29%)</title><rect x="59.8281%" y="789" width="0.2865%" height="15" fill="rgb(244,186,29)"/><text x="60.0781%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.23%)</title><rect x="59.8854%" y="773" width="0.2292%" height="15" fill="rgb(234,111,31)"/><text x="60.1354%" y="783.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (38 samples, 2.18%)</title><rect x="57.9943%" y="853" width="2.1777%" height="15" fill="rgb(241,149,10)"/><text x="58.2443%" y="863.50">c..</text></g><g><title>core::mem::swap (11 samples, 0.63%)</title><rect x="59.5415%" y="837" width="0.6304%" height="15" fill="rgb(249,206,44)"/><text x="59.7915%" y="847.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.57%)</title><rect x="59.5989%" y="821" width="0.5731%" height="15" fill="rgb(251,153,30)"/><text x="59.8489%" y="831.50"></text></g><g><title>core::ptr::read (6 samples, 0.34%)</title><rect x="59.8281%" y="805" width="0.3438%" height="15" fill="rgb(239,152,38)"/><text x="60.0781%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (28 samples, 1.60%)</title><rect x="61.7765%" y="821" width="1.6046%" height="15" fill="rgb(249,139,47)"/><text x="62.0265%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.92%)</title><rect x="62.4642%" y="805" width="0.9169%" height="15" fill="rgb(244,64,35)"/><text x="62.7142%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (58 samples, 3.32%)</title><rect x="60.1719%" y="853" width="3.3238%" height="15" fill="rgb(216,46,15)"/><text x="60.4219%" y="863.50">cor..</text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (49 samples, 2.81%)</title><rect x="60.6877%" y="837" width="2.8080%" height="15" fill="rgb(250,74,19)"/><text x="60.9377%" y="847.50">&lt;u..</text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.11%)</title><rect x="63.3811%" y="821" width="0.1146%" height="15" fill="rgb(249,42,33)"/><text x="63.6311%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (26 samples, 1.49%)</title><rect x="65.6160%" y="821" width="1.4900%" height="15" fill="rgb(242,149,17)"/><text x="65.8660%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.74%)</title><rect x="66.3610%" y="805" width="0.7450%" height="15" fill="rgb(244,29,21)"/><text x="66.6110%" y="815.50"></text></g><g><title>rustfft::algorithm::radix4::butterfly_4 (442 samples, 25.33%)</title><rect x="41.8338%" y="869" width="25.3295%" height="15" fill="rgb(220,130,37)"/><text x="42.0838%" y="879.50">rustfft::algorithm::radix4::butterfly_4</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (64 samples, 3.67%)</title><rect x="63.4957%" y="853" width="3.6676%" height="15" fill="rgb(211,67,2)"/><text x="63.7457%" y="863.50">core..</text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (52 samples, 2.98%)</title><rect x="64.1834%" y="837" width="2.9799%" height="15" fill="rgb(235,68,52)"/><text x="64.4334%" y="847.50">&lt;us..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.23%)</title><rect x="67.4499%" y="805" width="0.2292%" height="15" fill="rgb(246,142,3)"/><text x="67.6999%" y="815.50"></text></g><g><title>core::mem::swap (3 samples, 0.17%)</title><rect x="67.5072%" y="789" width="0.1719%" height="15" fill="rgb(241,25,7)"/><text x="67.7572%" y="799.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.17%)</title><rect x="67.5072%" y="773" width="0.1719%" height="15" fill="rgb(242,119,39)"/><text x="67.7572%" y="783.50"></text></g><g><title>core::ptr::read (2 samples, 0.11%)</title><rect x="67.5645%" y="757" width="0.1146%" height="15" fill="rgb(241,98,45)"/><text x="67.8145%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.11%)</title><rect x="67.8510%" y="741" width="0.1146%" height="15" fill="rgb(254,28,30)"/><text x="68.1010%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.11%)</title><rect x="67.8510%" y="725" width="0.1146%" height="15" fill="rgb(241,142,54)"/><text x="68.1010%" y="735.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.29%)</title><rect x="67.7364%" y="805" width="0.2865%" height="15" fill="rgb(222,85,15)"/><text x="67.9864%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.29%)</title><rect x="67.7364%" y="789" width="0.2865%" height="15" fill="rgb(210,85,47)"/><text x="67.9864%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.23%)</title><rect x="67.7937%" y="773" width="0.2292%" height="15" fill="rgb(224,206,25)"/><text x="68.0437%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.23%)</title><rect x="67.7937%" y="757" width="0.2292%" height="15" fill="rgb(243,201,19)"/><text x="68.0437%" y="767.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (6 samples, 0.34%)</title><rect x="69.3983%" y="757" width="0.3438%" height="15" fill="rgb(236,59,4)"/><text x="69.6483%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.11%)</title><rect x="69.6275%" y="741" width="0.1146%" height="15" fill="rgb(254,179,45)"/><text x="69.8775%" y="751.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::add_usize (21 samples, 1.20%)</title><rect x="69.2837%" y="773" width="1.2034%" height="15" fill="rgb(226,14,10)"/><text x="69.5337%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.74%)</title><rect x="69.7421%" y="757" width="0.7450%" height="15" fill="rgb(244,27,41)"/><text x="69.9921%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.46%)</title><rect x="70.0287%" y="741" width="0.4585%" height="15" fill="rgb(235,35,32)"/><text x="70.2787%" y="751.50"></text></g><g><title>core::ptr::read (5 samples, 0.29%)</title><rect x="70.6590%" y="741" width="0.2865%" height="15" fill="rgb(218,68,31)"/><text x="70.9090%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (34 samples, 1.95%)</title><rect x="69.1117%" y="789" width="1.9484%" height="15" fill="rgb(207,120,37)"/><text x="69.3617%" y="799.50">c..</text></g><g><title>core::mem::swap (10 samples, 0.57%)</title><rect x="70.4871%" y="773" width="0.5731%" height="15" fill="rgb(227,98,0)"/><text x="70.7371%" y="783.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.57%)</title><rect x="70.4871%" y="757" width="0.5731%" height="15" fill="rgb(207,7,3)"/><text x="70.7371%" y="767.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="70.9456%" y="741" width="0.1146%" height="15" fill="rgb(206,98,19)"/><text x="71.1956%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.46%)</title><rect x="71.4040%" y="757" width="0.4585%" height="15" fill="rgb(217,5,26)"/><text x="71.6540%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.29%)</title><rect x="71.5759%" y="741" width="0.2865%" height="15" fill="rgb(235,190,38)"/><text x="71.8259%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.86%)</title><rect x="71.0602%" y="789" width="0.8596%" height="15" fill="rgb(247,86,24)"/><text x="71.3102%" y="799.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.69%)</title><rect x="71.2321%" y="773" width="0.6877%" height="15" fill="rgb(205,101,16)"/><text x="71.4821%" y="783.50"></text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::perform_fft (528 samples, 30.26%)</title><rect x="41.8338%" y="885" width="30.2579%" height="15" fill="rgb(246,168,33)"/><text x="42.0838%" y="895.50">rustfft::algorithm::radix4::Radix4&lt;T&gt;::perform_fft</text></g><g><title>rustfft::algorithm::radix4::prepare_radix4 (86 samples, 4.93%)</title><rect x="67.1633%" y="869" width="4.9284%" height="15" fill="rgb(231,114,1)"/><text x="67.4133%" y="879.50">rustff..</text></g><g><title>rustfft::algorithm::radix4::prepare_radix4 (86 samples, 4.93%)</title><rect x="67.1633%" y="853" width="4.9284%" height="15" fill="rgb(207,184,53)"/><text x="67.4133%" y="863.50">rustff..</text></g><g><title>rustfft::algorithm::radix4::prepare_radix4 (83 samples, 4.76%)</title><rect x="67.3352%" y="837" width="4.7564%" height="15" fill="rgb(224,95,51)"/><text x="67.5852%" y="847.50">rustff..</text></g><g><title>rustfft::algorithm::radix4::prepare_radix4 (81 samples, 4.64%)</title><rect x="67.4499%" y="821" width="4.6418%" height="15" fill="rgb(212,188,45)"/><text x="67.6999%" y="831.50">rustf..</text></g><g><title>rustfft::algorithm::radix4::prepare_radix4 (71 samples, 4.07%)</title><rect x="68.0229%" y="805" width="4.0688%" height="15" fill="rgb(223,154,38)"/><text x="68.2729%" y="815.50">rust..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (3 samples, 0.17%)</title><rect x="71.9198%" y="789" width="0.1719%" height="15" fill="rgb(251,22,52)"/><text x="72.1698%" y="799.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.17%)</title><rect x="71.9198%" y="773" width="0.1719%" height="15" fill="rgb(229,209,22)"/><text x="72.1698%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.11%)</title><rect x="71.9771%" y="757" width="0.1146%" height="15" fill="rgb(234,138,34)"/><text x="72.2271%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2 samples, 0.11%)</title><rect x="72.7794%" y="325" width="0.1146%" height="15" fill="rgb(212,95,11)"/><text x="73.0294%" y="335.50"></text></g><g><title>&lt;alloc::collections::vec_deque::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.57%)</title><rect x="72.6074%" y="341" width="0.5731%" height="15" fill="rgb(240,179,47)"/><text x="72.8574%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.29%)</title><rect x="72.8940%" y="325" width="0.2865%" height="15" fill="rgb(240,163,11)"/><text x="73.1440%" y="335.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.23%)</title><rect x="72.9513%" y="309" width="0.2292%" height="15" fill="rgb(236,37,12)"/><text x="73.2013%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.15%)</title><rect x="72.2636%" y="373" width="1.1461%" height="15" fill="rgb(232,164,16)"/><text x="72.5136%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (20 samples, 1.15%)</title><rect x="72.2636%" y="357" width="1.1461%" height="15" fill="rgb(244,205,15)"/><text x="72.5136%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.23%)</title><rect x="73.1805%" y="341" width="0.2292%" height="15" fill="rgb(223,117,47)"/><text x="73.4305%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.17%)</title><rect x="73.2378%" y="325" width="0.1719%" height="15" fill="rgb(244,107,35)"/><text x="73.4878%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 1.60%)</title><rect x="72.2636%" y="581" width="1.6046%" height="15" fill="rgb(205,140,8)"/><text x="72.5136%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 1.60%)</title><rect x="72.2636%" y="565" width="1.6046%" height="15" fill="rgb(228,84,46)"/><text x="72.5136%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (28 samples, 1.60%)</title><rect x="72.2636%" y="549" width="1.6046%" height="15" fill="rgb(254,188,9)"/><text x="72.5136%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (28 samples, 1.60%)</title><rect x="72.2636%" y="533" width="1.6046%" height="15" fill="rgb(206,112,54)"/><text x="72.5136%" y="543.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (28 samples, 1.60%)</title><rect x="72.2636%" y="517" width="1.6046%" height="15" fill="rgb(216,84,49)"/><text x="72.5136%" y="527.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (28 samples, 1.60%)</title><rect x="72.2636%" y="501" width="1.6046%" height="15" fill="rgb(214,194,35)"/><text x="72.5136%" y="511.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as core::ops::arith::Add&gt;::add (28 samples, 1.60%)</title><rect x="72.2636%" y="485" width="1.6046%" height="15" fill="rgb(249,28,3)"/><text x="72.5136%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 1.60%)</title><rect x="72.2636%" y="469" width="1.6046%" height="15" fill="rgb(222,56,52)"/><text x="72.5136%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 1.60%)</title><rect x="72.2636%" y="453" width="1.6046%" height="15" fill="rgb(245,217,50)"/><text x="72.5136%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (28 samples, 1.60%)</title><rect x="72.2636%" y="437" width="1.6046%" height="15" fill="rgb(213,201,24)"/><text x="72.5136%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 1.60%)</title><rect x="72.2636%" y="421" width="1.6046%" height="15" fill="rgb(248,116,28)"/><text x="72.5136%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (28 samples, 1.60%)</title><rect x="72.2636%" y="405" width="1.6046%" height="15" fill="rgb(219,72,43)"/><text x="72.5136%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.60%)</title><rect x="72.2636%" y="389" width="1.6046%" height="15" fill="rgb(209,138,14)"/><text x="72.5136%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.46%)</title><rect x="73.4097%" y="373" width="0.4585%" height="15" fill="rgb(222,18,33)"/><text x="73.6597%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.46%)</title><rect x="73.4097%" y="357" width="0.4585%" height="15" fill="rgb(213,199,7)"/><text x="73.6597%" y="367.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as core::ops::arith::Add&gt;::add::_{{closure}} (8 samples, 0.46%)</title><rect x="73.4097%" y="341" width="0.4585%" height="15" fill="rgb(250,110,10)"/><text x="73.6597%" y="351.50"></text></g><g><title>&lt;&amp;i32 as core::ops::arith::Add&lt;&amp;i32&gt;&gt;::add (6 samples, 0.34%)</title><rect x="73.5244%" y="325" width="0.3438%" height="15" fill="rgb(248,123,6)"/><text x="73.7744%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.34%)</title><rect x="73.8682%" y="229" width="0.3438%" height="15" fill="rgb(206,91,31)"/><text x="74.1182%" y="239.50"></text></g><g><title>core::mem::swap (5 samples, 0.29%)</title><rect x="73.9255%" y="213" width="0.2865%" height="15" fill="rgb(211,154,13)"/><text x="74.1755%" y="223.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.29%)</title><rect x="73.9255%" y="197" width="0.2865%" height="15" fill="rgb(225,148,7)"/><text x="74.1755%" y="207.50"></text></g><g><title>core::ptr::read (3 samples, 0.17%)</title><rect x="74.0401%" y="181" width="0.1719%" height="15" fill="rgb(220,160,43)"/><text x="74.2901%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (2 samples, 0.11%)</title><rect x="74.0974%" y="165" width="0.1146%" height="15" fill="rgb(213,52,39)"/><text x="74.3474%" y="175.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.11%)</title><rect x="74.0974%" y="149" width="0.1146%" height="15" fill="rgb(243,137,7)"/><text x="74.3474%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.11%)</title><rect x="74.2120%" y="197" width="0.1146%" height="15" fill="rgb(230,79,13)"/><text x="74.4620%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.11%)</title><rect x="74.2120%" y="181" width="0.1146%" height="15" fill="rgb(247,105,23)"/><text x="74.4620%" y="191.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="74.2120%" y="165" width="0.1146%" height="15" fill="rgb(223,179,41)"/><text x="74.4620%" y="175.50"></text></g><g><title>std::rt::lang_start_internal (41 samples, 2.35%)</title><rect x="72.2063%" y="885" width="2.3496%" height="15" fill="rgb(218,9,34)"/><text x="72.4563%" y="895.50">s..</text></g><g><title>std::panic::catch_unwind (41 samples, 2.35%)</title><rect x="72.2063%" y="869" width="2.3496%" height="15" fill="rgb(222,106,8)"/><text x="72.4563%" y="879.50">s..</text></g><g><title>std::panicking::try (41 samples, 2.35%)</title><rect x="72.2063%" y="853" width="2.3496%" height="15" fill="rgb(211,220,0)"/><text x="72.4563%" y="863.50">s..</text></g><g><title>__rust_maybe_catch_panic (41 samples, 2.35%)</title><rect x="72.2063%" y="837" width="2.3496%" height="15" fill="rgb(229,52,16)"/><text x="72.4563%" y="847.50">_..</text></g><g><title>std::panicking::try::do_call (41 samples, 2.35%)</title><rect x="72.2063%" y="821" width="2.3496%" height="15" fill="rgb(212,155,18)"/><text x="72.4563%" y="831.50">s..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (41 samples, 2.35%)</title><rect x="72.2063%" y="805" width="2.3496%" height="15" fill="rgb(242,21,14)"/><text x="72.4563%" y="815.50">s..</text></g><g><title>std::rt::lang_start::_{{closure}} (41 samples, 2.35%)</title><rect x="72.2063%" y="789" width="2.3496%" height="15" fill="rgb(222,19,48)"/><text x="72.4563%" y="799.50">s..</text></g><g><title>encrypt::main (41 samples, 2.35%)</title><rect x="72.2063%" y="773" width="2.3496%" height="15" fill="rgb(232,45,27)"/><text x="72.4563%" y="783.50">e..</text></g><g><title>tfhe::bootstrapping::new_random_gate_bootstrapping_secret_keyset (41 samples, 2.35%)</title><rect x="72.2063%" y="757" width="2.3496%" height="15" fill="rgb(249,103,42)"/><text x="72.4563%" y="767.50">t..</text></g><g><title>tfhe::lwe::LweBootstrappingKey::create (41 samples, 2.35%)</title><rect x="72.2063%" y="741" width="2.3496%" height="15" fill="rgb(246,81,33)"/><text x="72.4563%" y="751.50">t..</text></g><g><title>tfhe::tgsw::TGswKey::encrypt (41 samples, 2.35%)</title><rect x="72.2063%" y="725" width="2.3496%" height="15" fill="rgb(252,33,42)"/><text x="72.4563%" y="735.50">t..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (40 samples, 2.29%)</title><rect x="72.2636%" y="709" width="2.2923%" height="15" fill="rgb(209,212,41)"/><text x="72.5136%" y="719.50">t..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (40 samples, 2.29%)</title><rect x="72.2636%" y="693" width="2.2923%" height="15" fill="rgb(207,154,6)"/><text x="72.5136%" y="703.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 2.29%)</title><rect x="72.2636%" y="677" width="2.2923%" height="15" fill="rgb(223,64,47)"/><text x="72.5136%" y="687.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 2.29%)</title><rect x="72.2636%" y="661" width="2.2923%" height="15" fill="rgb(211,161,38)"/><text x="72.5136%" y="671.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (40 samples, 2.29%)</title><rect x="72.2636%" y="645" width="2.2923%" height="15" fill="rgb(219,138,40)"/><text x="72.5136%" y="655.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (40 samples, 2.29%)</title><rect x="72.2636%" y="629" width="2.2923%" height="15" fill="rgb(241,228,46)"/><text x="72.5136%" y="639.50">c..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (40 samples, 2.29%)</title><rect x="72.2636%" y="613" width="2.2923%" height="15" fill="rgb(223,209,38)"/><text x="72.5136%" y="623.50">t..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (40 samples, 2.29%)</title><rect x="72.2636%" y="597" width="2.2923%" height="15" fill="rgb(236,164,45)"/><text x="72.5136%" y="607.50">t..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.69%)</title><rect x="73.8682%" y="581" width="0.6877%" height="15" fill="rgb(231,15,5)"/><text x="74.1182%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.69%)</title><rect x="73.8682%" y="565" width="0.6877%" height="15" fill="rgb(252,35,15)"/><text x="74.1182%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (12 samples, 0.69%)</title><rect x="73.8682%" y="549" width="0.6877%" height="15" fill="rgb(248,181,18)"/><text x="74.1182%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.69%)</title><rect x="73.8682%" y="533" width="0.6877%" height="15" fill="rgb(233,39,42)"/><text x="74.1182%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.69%)</title><rect x="73.8682%" y="517" width="0.6877%" height="15" fill="rgb(238,110,33)"/><text x="74.1182%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.69%)</title><rect x="73.8682%" y="501" width="0.6877%" height="15" fill="rgb(233,195,10)"/><text x="74.1182%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.69%)</title><rect x="73.8682%" y="485" width="0.6877%" height="15" fill="rgb(254,105,3)"/><text x="74.1182%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.69%)</title><rect x="73.8682%" y="469" width="0.6877%" height="15" fill="rgb(221,225,9)"/><text x="74.1182%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.69%)</title><rect x="73.8682%" y="453" width="0.6877%" height="15" fill="rgb(224,227,45)"/><text x="74.1182%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (12 samples, 0.69%)</title><rect x="73.8682%" y="437" width="0.6877%" height="15" fill="rgb(229,198,43)"/><text x="74.1182%" y="447.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (12 samples, 0.69%)</title><rect x="73.8682%" y="421" width="0.6877%" height="15" fill="rgb(206,209,35)"/><text x="74.1182%" y="431.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (12 samples, 0.69%)</title><rect x="73.8682%" y="405" width="0.6877%" height="15" fill="rgb(245,195,53)"/><text x="74.1182%" y="415.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as tfhe::polynomial::Polynomial&lt;i32&gt;&gt;::uniform (12 samples, 0.69%)</title><rect x="73.8682%" y="389" width="0.6877%" height="15" fill="rgb(240,92,26)"/><text x="74.1182%" y="399.50"></text></g><g><title>tfhe::polynomial::uniform (12 samples, 0.69%)</title><rect x="73.8682%" y="373" width="0.6877%" height="15" fill="rgb(207,40,23)"/><text x="74.1182%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.69%)</title><rect x="73.8682%" y="357" width="0.6877%" height="15" fill="rgb(223,111,35)"/><text x="74.1182%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.69%)</title><rect x="73.8682%" y="341" width="0.6877%" height="15" fill="rgb(229,147,28)"/><text x="74.1182%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (12 samples, 0.69%)</title><rect x="73.8682%" y="325" width="0.6877%" height="15" fill="rgb(211,29,28)"/><text x="74.1182%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.69%)</title><rect x="73.8682%" y="309" width="0.6877%" height="15" fill="rgb(228,72,33)"/><text x="74.1182%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.69%)</title><rect x="73.8682%" y="293" width="0.6877%" height="15" fill="rgb(205,214,31)"/><text x="74.1182%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.69%)</title><rect x="73.8682%" y="277" width="0.6877%" height="15" fill="rgb(224,111,15)"/><text x="74.1182%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.69%)</title><rect x="73.8682%" y="261" width="0.6877%" height="15" fill="rgb(253,21,26)"/><text x="74.1182%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.69%)</title><rect x="73.8682%" y="245" width="0.6877%" height="15" fill="rgb(245,139,43)"/><text x="74.1182%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (6 samples, 0.34%)</title><rect x="74.2120%" y="229" width="0.3438%" height="15" fill="rgb(252,170,7)"/><text x="74.4620%" y="239.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (6 samples, 0.34%)</title><rect x="74.2120%" y="213" width="0.3438%" height="15" fill="rgb(231,118,14)"/><text x="74.4620%" y="223.50"></text></g><g><title>tfhe::polynomial::uniform::_{{closure}} (4 samples, 0.23%)</title><rect x="74.3266%" y="197" width="0.2292%" height="15" fill="rgb(238,83,0)"/><text x="74.5766%" y="207.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::Distribution&lt;X&gt;&gt;::sample (4 samples, 0.23%)</title><rect x="74.3266%" y="181" width="0.2292%" height="15" fill="rgb(221,39,39)"/><text x="74.5766%" y="191.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;i32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (2 samples, 0.11%)</title><rect x="74.4413%" y="165" width="0.1146%" height="15" fill="rgb(222,119,46)"/><text x="74.6913%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.11%)</title><rect x="75.3009%" y="101" width="0.1146%" height="15" fill="rgb(222,165,49)"/><text x="75.5509%" y="111.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.74%)</title><rect x="74.9570%" y="117" width="0.7450%" height="15" fill="rgb(219,113,52)"/><text x="75.2070%" y="127.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (4 samples, 0.23%)</title><rect x="75.4728%" y="101" width="0.2292%" height="15" fill="rgb(214,7,15)"/><text x="75.7228%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.23%)</title><rect x="75.4728%" y="85" width="0.2292%" height="15" fill="rgb(235,32,4)"/><text x="75.7228%" y="95.50"></text></g><g><title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.11%)</title><rect x="76.1605%" y="85" width="0.1146%" height="15" fill="rgb(238,90,54)"/><text x="76.4105%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.29%)</title><rect x="76.5616%" y="69" width="0.2865%" height="15" fill="rgb(213,208,19)"/><text x="76.8116%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (4 samples, 0.23%)</title><rect x="76.6189%" y="53" width="0.2292%" height="15" fill="rgb(233,156,4)"/><text x="76.8689%" y="63.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="76.7335%" y="37" width="0.1146%" height="15" fill="rgb(207,194,5)"/><text x="76.9835%" y="47.50"></text></g><g><title>tfhe::tgsw::TGswSample::add_mu_int_h (47 samples, 2.69%)</title><rect x="74.5559%" y="837" width="2.6934%" height="15" fill="rgb(206,111,30)"/><text x="74.8059%" y="847.50">tf..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 2.69%)</title><rect x="74.5559%" y="821" width="2.6934%" height="15" fill="rgb(243,70,54)"/><text x="74.8059%" y="831.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="805" width="2.6934%" height="15" fill="rgb(242,28,8)"/><text x="74.8059%" y="815.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="789" width="2.6934%" height="15" fill="rgb(219,106,18)"/><text x="74.8059%" y="799.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 2.69%)</title><rect x="74.5559%" y="773" width="2.6934%" height="15" fill="rgb(244,222,10)"/><text x="74.8059%" y="783.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 2.69%)</title><rect x="74.5559%" y="757" width="2.6934%" height="15" fill="rgb(236,179,52)"/><text x="74.8059%" y="767.50">co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="741" width="2.6934%" height="15" fill="rgb(213,23,39)"/><text x="74.8059%" y="751.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="725" width="2.6934%" height="15" fill="rgb(238,48,10)"/><text x="74.8059%" y="735.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="709" width="2.6934%" height="15" fill="rgb(251,196,23)"/><text x="74.8059%" y="719.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 2.69%)</title><rect x="74.5559%" y="693" width="2.6934%" height="15" fill="rgb(250,152,24)"/><text x="74.8059%" y="703.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="677" width="2.6934%" height="15" fill="rgb(209,150,17)"/><text x="74.8059%" y="687.50">co..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="661" width="2.6934%" height="15" fill="rgb(234,202,34)"/><text x="74.8059%" y="671.50">&lt;c..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="645" width="2.6934%" height="15" fill="rgb(253,148,53)"/><text x="74.8059%" y="655.50">co..</text></g><g><title>tfhe::tgsw::TGswSample::add_mu_int_h::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="629" width="2.6934%" height="15" fill="rgb(218,129,16)"/><text x="74.8059%" y="639.50">tf..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 2.69%)</title><rect x="74.5559%" y="613" width="2.6934%" height="15" fill="rgb(216,85,19)"/><text x="74.8059%" y="623.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="597" width="2.6934%" height="15" fill="rgb(235,228,7)"/><text x="74.8059%" y="607.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="581" width="2.6934%" height="15" fill="rgb(245,175,0)"/><text x="74.8059%" y="591.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 2.69%)</title><rect x="74.5559%" y="565" width="2.6934%" height="15" fill="rgb(208,168,36)"/><text x="74.8059%" y="575.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 2.69%)</title><rect x="74.5559%" y="549" width="2.6934%" height="15" fill="rgb(246,171,24)"/><text x="74.8059%" y="559.50">co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="533" width="2.6934%" height="15" fill="rgb(215,142,24)"/><text x="74.8059%" y="543.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="517" width="2.6934%" height="15" fill="rgb(250,187,7)"/><text x="74.8059%" y="527.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 2.69%)</title><rect x="74.5559%" y="501" width="2.6934%" height="15" fill="rgb(228,66,33)"/><text x="74.8059%" y="511.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="485" width="2.6934%" height="15" fill="rgb(234,215,21)"/><text x="74.8059%" y="495.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="469" width="2.6934%" height="15" fill="rgb(222,191,20)"/><text x="74.8059%" y="479.50">co..</text></g><g><title>tfhe::tgsw::TGswSample::add_mu_int_h::_{{closure}}::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="453" width="2.6934%" height="15" fill="rgb(245,79,54)"/><text x="74.8059%" y="463.50">tf..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 2.69%)</title><rect x="74.5559%" y="437" width="2.6934%" height="15" fill="rgb(240,10,37)"/><text x="74.8059%" y="447.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="421" width="2.6934%" height="15" fill="rgb(214,192,32)"/><text x="74.8059%" y="431.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="405" width="2.6934%" height="15" fill="rgb(209,36,54)"/><text x="74.8059%" y="415.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 2.69%)</title><rect x="74.5559%" y="389" width="2.6934%" height="15" fill="rgb(220,10,11)"/><text x="74.8059%" y="399.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 2.69%)</title><rect x="74.5559%" y="373" width="2.6934%" height="15" fill="rgb(221,106,17)"/><text x="74.8059%" y="383.50">co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="357" width="2.6934%" height="15" fill="rgb(251,142,44)"/><text x="74.8059%" y="367.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="341" width="2.6934%" height="15" fill="rgb(238,13,15)"/><text x="74.8059%" y="351.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 2.69%)</title><rect x="74.5559%" y="325" width="2.6934%" height="15" fill="rgb(208,107,27)"/><text x="74.8059%" y="335.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="309" width="2.6934%" height="15" fill="rgb(205,136,37)"/><text x="74.8059%" y="319.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="293" width="2.6934%" height="15" fill="rgb(250,205,27)"/><text x="74.8059%" y="303.50">co..</text></g><g><title>tfhe::tgsw::TGswSample::add_mu_int_h::_{{closure}}::_{{closure}}::_{{closure}} (47 samples, 2.69%)</title><rect x="74.5559%" y="277" width="2.6934%" height="15" fill="rgb(210,80,43)"/><text x="74.8059%" y="287.50">tf..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 2.69%)</title><rect x="74.5559%" y="261" width="2.6934%" height="15" fill="rgb(247,160,36)"/><text x="74.8059%" y="271.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="245" width="2.6934%" height="15" fill="rgb(234,13,49)"/><text x="74.8059%" y="255.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (47 samples, 2.69%)</title><rect x="74.5559%" y="229" width="2.6934%" height="15" fill="rgb(234,122,0)"/><text x="74.8059%" y="239.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 2.69%)</title><rect x="74.5559%" y="213" width="2.6934%" height="15" fill="rgb(207,146,38)"/><text x="74.8059%" y="223.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 2.69%)</title><rect x="74.5559%" y="197" width="2.6934%" height="15" fill="rgb(207,177,25)"/><text x="74.8059%" y="207.50">co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="181" width="2.6934%" height="15" fill="rgb(211,178,42)"/><text x="74.8059%" y="191.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="165" width="2.6934%" height="15" fill="rgb(230,69,54)"/><text x="74.8059%" y="175.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 2.69%)</title><rect x="74.5559%" y="149" width="2.6934%" height="15" fill="rgb(214,135,41)"/><text x="74.8059%" y="159.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 2.69%)</title><rect x="74.5559%" y="133" width="2.6934%" height="15" fill="rgb(237,67,25)"/><text x="74.8059%" y="143.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (27 samples, 1.55%)</title><rect x="75.7020%" y="117" width="1.5473%" height="15" fill="rgb(222,189,50)"/><text x="75.9520%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (25 samples, 1.43%)</title><rect x="75.8166%" y="101" width="1.4327%" height="15" fill="rgb(245,148,34)"/><text x="76.0666%" y="111.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (17 samples, 0.97%)</title><rect x="76.2751%" y="85" width="0.9742%" height="15" fill="rgb(222,29,6)"/><text x="76.5251%" y="95.50"></text></g><g><title>tfhe::tgsw::TGswSample::add_mu_int_h::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 0.40%)</title><rect x="76.8481%" y="69" width="0.4011%" height="15" fill="rgb(221,189,43)"/><text x="77.0981%" y="79.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 0.23%)</title><rect x="77.5358%" y="421" width="0.2292%" height="15" fill="rgb(207,36,27)"/><text x="77.7858%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.23%)</title><rect x="78.2235%" y="357" width="0.2292%" height="15" fill="rgb(217,90,24)"/><text x="78.4735%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.11%)</title><rect x="78.3381%" y="341" width="0.1146%" height="15" fill="rgb(224,66,35)"/><text x="78.5881%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.52%)</title><rect x="77.9943%" y="389" width="0.5158%" height="15" fill="rgb(221,13,50)"/><text x="78.2443%" y="399.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (9 samples, 0.52%)</title><rect x="77.9943%" y="373" width="0.5158%" height="15" fill="rgb(236,68,49)"/><text x="78.2443%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 1.43%)</title><rect x="77.3066%" y="485" width="1.4327%" height="15" fill="rgb(229,146,28)"/><text x="77.5566%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 1.43%)</title><rect x="77.3066%" y="469" width="1.4327%" height="15" fill="rgb(225,31,38)"/><text x="77.5566%" y="479.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (25 samples, 1.43%)</title><rect x="77.3066%" y="453" width="1.4327%" height="15" fill="rgb(250,208,3)"/><text x="77.5566%" y="463.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (25 samples, 1.43%)</title><rect x="77.3066%" y="437" width="1.4327%" height="15" fill="rgb(246,54,23)"/><text x="77.5566%" y="447.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold::ok::_{{closure}} (17 samples, 0.97%)</title><rect x="77.7650%" y="421" width="0.9742%" height="15" fill="rgb(243,76,11)"/><text x="78.0150%" y="431.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (16 samples, 0.92%)</title><rect x="77.8223%" y="405" width="0.9169%" height="15" fill="rgb(245,21,50)"/><text x="78.0723%" y="415.50"></text></g><g><title>tfhe::numerics::poly_multiplier::_{{closure}} (4 samples, 0.23%)</title><rect x="78.5100%" y="389" width="0.2292%" height="15" fill="rgb(228,9,43)"/><text x="78.7600%" y="399.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i32&gt; for f64&gt;::from (2 samples, 0.11%)</title><rect x="78.6246%" y="373" width="0.1146%" height="15" fill="rgb(208,100,47)"/><text x="78.8746%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 2.23%)</title><rect x="77.3066%" y="501" width="2.2350%" height="15" fill="rgb(232,26,8)"/><text x="77.5566%" y="511.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.80%)</title><rect x="78.7393%" y="485" width="0.8023%" height="15" fill="rgb(216,166,38)"/><text x="78.9893%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.80%)</title><rect x="78.7393%" y="469" width="0.8023%" height="15" fill="rgb(251,202,51)"/><text x="78.9893%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.80%)</title><rect x="78.7393%" y="453" width="0.8023%" height="15" fill="rgb(254,216,34)"/><text x="78.9893%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (10 samples, 0.57%)</title><rect x="78.9685%" y="437" width="0.5731%" height="15" fill="rgb(251,32,27)"/><text x="79.2185%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (9 samples, 0.52%)</title><rect x="79.0258%" y="421" width="0.5158%" height="15" fill="rgb(208,127,28)"/><text x="79.2758%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.46%)</title><rect x="79.0831%" y="405" width="0.4585%" height="15" fill="rgb(224,137,22)"/><text x="79.3331%" y="415.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (8 samples, 0.46%)</title><rect x="79.0831%" y="389" width="0.4585%" height="15" fill="rgb(254,70,32)"/><text x="79.3331%" y="399.50"></text></g><g><title>tfhe::numerics::poly_multiplier::_{{closure}} (5 samples, 0.29%)</title><rect x="79.2550%" y="373" width="0.2865%" height="15" fill="rgb(229,75,37)"/><text x="79.5050%" y="383.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::new (2 samples, 0.11%)</title><rect x="79.4269%" y="357" width="0.1146%" height="15" fill="rgb(252,64,23)"/><text x="79.6769%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.23%)</title><rect x="79.7135%" y="469" width="0.2292%" height="15" fill="rgb(232,162,48)"/><text x="79.9635%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.17%)</title><rect x="79.7708%" y="453" width="0.1719%" height="15" fill="rgb(246,160,12)"/><text x="80.0208%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 3.15%)</title><rect x="77.3066%" y="517" width="3.1519%" height="15" fill="rgb(247,166,0)"/><text x="77.5566%" y="527.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.92%)</title><rect x="79.5415%" y="501" width="0.9169%" height="15" fill="rgb(249,219,21)"/><text x="79.7915%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.92%)</title><rect x="79.5415%" y="485" width="0.9169%" height="15" fill="rgb(205,209,3)"/><text x="79.7915%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (9 samples, 0.52%)</title><rect x="79.9427%" y="469" width="0.5158%" height="15" fill="rgb(243,44,1)"/><text x="80.1927%" y="479.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (8 samples, 0.46%)</title><rect x="80.0000%" y="453" width="0.4585%" height="15" fill="rgb(206,159,16)"/><text x="80.2500%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.29%)</title><rect x="80.1719%" y="437" width="0.2865%" height="15" fill="rgb(244,77,30)"/><text x="80.4219%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (3 samples, 0.17%)</title><rect x="80.2865%" y="421" width="0.1719%" height="15" fill="rgb(218,69,12)"/><text x="80.5365%" y="431.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="80.3438%" y="405" width="0.1146%" height="15" fill="rgb(212,87,7)"/><text x="80.5938%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.11%)</title><rect x="80.5158%" y="405" width="0.1146%" height="15" fill="rgb(245,114,25)"/><text x="80.7658%" y="415.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 0.23%)</title><rect x="80.4585%" y="437" width="0.2292%" height="15" fill="rgb(210,61,42)"/><text x="80.7085%" y="447.50"></text></g><g><title>core::ptr::read (4 samples, 0.23%)</title><rect x="80.4585%" y="421" width="0.2292%" height="15" fill="rgb(211,52,33)"/><text x="80.7085%" y="431.50"></text></g><g><title>alloc::vec::SetLenOnDrop::increment_len (3 samples, 0.17%)</title><rect x="80.9742%" y="373" width="0.1719%" height="15" fill="rgb(234,58,33)"/><text x="81.2242%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7 samples, 0.40%)</title><rect x="80.8596%" y="405" width="0.4011%" height="15" fill="rgb(220,115,36)"/><text x="81.1096%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (6 samples, 0.34%)</title><rect x="80.9169%" y="389" width="0.3438%" height="15" fill="rgb(243,153,54)"/><text x="81.1669%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.11%)</title><rect x="81.1461%" y="373" width="0.1146%" height="15" fill="rgb(251,47,18)"/><text x="81.3961%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 4.18%)</title><rect x="77.3066%" y="597" width="4.1834%" height="15" fill="rgb(242,102,42)"/><text x="77.5566%" y="607.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (73 samples, 4.18%)</title><rect x="77.3066%" y="581" width="4.1834%" height="15" fill="rgb(234,31,38)"/><text x="77.5566%" y="591.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (73 samples, 4.18%)</title><rect x="77.3066%" y="565" width="4.1834%" height="15" fill="rgb(221,117,51)"/><text x="77.5566%" y="575.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 4.18%)</title><rect x="77.3066%" y="549" width="4.1834%" height="15" fill="rgb(212,20,18)"/><text x="77.5566%" y="559.50">&lt;allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (73 samples, 4.18%)</title><rect x="77.3066%" y="533" width="4.1834%" height="15" fill="rgb(245,133,36)"/><text x="77.5566%" y="543.50">core:..</text></g><g><title>&lt;core::iter::adapters::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 1.03%)</title><rect x="80.4585%" y="517" width="1.0315%" height="15" fill="rgb(212,6,19)"/><text x="80.7085%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::rfold (18 samples, 1.03%)</title><rect x="80.4585%" y="501" width="1.0315%" height="15" fill="rgb(218,1,36)"/><text x="80.7085%" y="511.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (18 samples, 1.03%)</title><rect x="80.4585%" y="485" width="1.0315%" height="15" fill="rgb(246,84,54)"/><text x="80.7085%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Take&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::try_rfold (18 samples, 1.03%)</title><rect x="80.4585%" y="469" width="1.0315%" height="15" fill="rgb(242,110,6)"/><text x="80.7085%" y="479.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (18 samples, 1.03%)</title><rect x="80.4585%" y="453" width="1.0315%" height="15" fill="rgb(214,47,5)"/><text x="80.7085%" y="463.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold::ok::_{{closure}} (14 samples, 0.80%)</title><rect x="80.6877%" y="437" width="0.8023%" height="15" fill="rgb(218,159,25)"/><text x="80.9377%" y="447.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (13 samples, 0.74%)</title><rect x="80.7450%" y="421" width="0.7450%" height="15" fill="rgb(215,211,28)"/><text x="80.9950%" y="431.50"></text></g><g><title>tfhe::numerics::poly_multiplier::_{{closure}} (4 samples, 0.23%)</title><rect x="81.2607%" y="405" width="0.2292%" height="15" fill="rgb(238,59,32)"/><text x="81.5107%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (3 samples, 0.17%)</title><rect x="81.3181%" y="389" width="0.1719%" height="15" fill="rgb(226,82,3)"/><text x="81.5681%" y="399.50"></text></g><g><title>rustfft::math_utils::prime_factors (2 samples, 0.11%)</title><rect x="81.4900%" y="581" width="0.1146%" height="15" fill="rgb(240,164,32)"/><text x="81.7400%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.11%)</title><rect x="81.4900%" y="565" width="0.1146%" height="15" fill="rgb(232,46,7)"/><text x="81.7400%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.11%)</title><rect x="81.4900%" y="549" width="0.1146%" height="15" fill="rgb(229,129,53)"/><text x="81.7400%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="81.4900%" y="533" width="0.1146%" height="15" fill="rgb(234,188,29)"/><text x="81.7400%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (2 samples, 0.11%)</title><rect x="81.4900%" y="517" width="0.1146%" height="15" fill="rgb(246,141,4)"/><text x="81.7400%" y="527.50"></text></g><g><title>tfhe::bootstrapping::new_random_gate_bootstrapping_secret_keyset (124 samples, 7.11%)</title><rect x="74.5559%" y="885" width="7.1060%" height="15" fill="rgb(229,23,39)"/><text x="74.8059%" y="895.50">tfhe::boot..</text></g><g><title>tfhe::lwe::LweBootstrappingKey::create (124 samples, 7.11%)</title><rect x="74.5559%" y="869" width="7.1060%" height="15" fill="rgb(206,12,3)"/><text x="74.8059%" y="879.50">tfhe::lwe:..</text></g><g><title>tfhe::tgsw::TGswKey::encrypt (124 samples, 7.11%)</title><rect x="74.5559%" y="853" width="7.1060%" height="15" fill="rgb(252,226,20)"/><text x="74.8059%" y="863.50">tfhe::tgsw..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (77 samples, 4.41%)</title><rect x="77.2493%" y="837" width="4.4126%" height="15" fill="rgb(216,123,35)"/><text x="77.4993%" y="847.50">tfhe:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (77 samples, 4.41%)</title><rect x="77.2493%" y="821" width="4.4126%" height="15" fill="rgb(212,68,40)"/><text x="77.4993%" y="831.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (77 samples, 4.41%)</title><rect x="77.2493%" y="805" width="4.4126%" height="15" fill="rgb(254,125,32)"/><text x="77.4993%" y="815.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (77 samples, 4.41%)</title><rect x="77.2493%" y="789" width="4.4126%" height="15" fill="rgb(253,97,22)"/><text x="77.4993%" y="799.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (77 samples, 4.41%)</title><rect x="77.2493%" y="773" width="4.4126%" height="15" fill="rgb(241,101,14)"/><text x="77.4993%" y="783.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (77 samples, 4.41%)</title><rect x="77.2493%" y="757" width="4.4126%" height="15" fill="rgb(238,103,29)"/><text x="77.4993%" y="767.50">core:..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (77 samples, 4.41%)</title><rect x="77.2493%" y="741" width="4.4126%" height="15" fill="rgb(233,195,47)"/><text x="77.4993%" y="751.50">tfhe:..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (77 samples, 4.41%)</title><rect x="77.2493%" y="725" width="4.4126%" height="15" fill="rgb(246,218,30)"/><text x="77.4993%" y="735.50">tfhe:..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 4.41%)</title><rect x="77.2493%" y="709" width="4.4126%" height="15" fill="rgb(219,145,47)"/><text x="77.4993%" y="719.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (77 samples, 4.41%)</title><rect x="77.2493%" y="693" width="4.4126%" height="15" fill="rgb(243,12,26)"/><text x="77.4993%" y="703.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (77 samples, 4.41%)</title><rect x="77.2493%" y="677" width="4.4126%" height="15" fill="rgb(214,87,16)"/><text x="77.4993%" y="687.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (77 samples, 4.41%)</title><rect x="77.2493%" y="661" width="4.4126%" height="15" fill="rgb(208,99,42)"/><text x="77.4993%" y="671.50">core:..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (77 samples, 4.41%)</title><rect x="77.2493%" y="645" width="4.4126%" height="15" fill="rgb(253,99,2)"/><text x="77.4993%" y="655.50">core:..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (77 samples, 4.41%)</title><rect x="77.2493%" y="629" width="4.4126%" height="15" fill="rgb(220,168,23)"/><text x="77.4993%" y="639.50">tfhe:..</text></g><g><title>tfhe::numerics::poly_multiplier (77 samples, 4.41%)</title><rect x="77.2493%" y="613" width="4.4126%" height="15" fill="rgb(242,38,24)"/><text x="77.4993%" y="623.50">tfhe:..</text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (3 samples, 0.17%)</title><rect x="81.4900%" y="597" width="0.1719%" height="15" fill="rgb(225,182,9)"/><text x="81.7400%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.11%)</title><rect x="81.6619%" y="421" width="0.1146%" height="15" fill="rgb(243,178,37)"/><text x="81.9119%" y="431.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.29%)</title><rect x="81.6619%" y="453" width="0.2865%" height="15" fill="rgb(232,139,19)"/><text x="81.9119%" y="463.50"></text></g><g><title>core::ptr::read (5 samples, 0.29%)</title><rect x="81.6619%" y="437" width="0.2865%" height="15" fill="rgb(225,201,24)"/><text x="81.9119%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.17%)</title><rect x="81.7765%" y="421" width="0.1719%" height="15" fill="rgb(221,47,46)"/><text x="82.0265%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.17%)</title><rect x="81.7765%" y="405" width="0.1719%" height="15" fill="rgb(249,23,13)"/><text x="82.0265%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.34%)</title><rect x="81.6619%" y="485" width="0.3438%" height="15" fill="rgb(219,9,5)"/><text x="81.9119%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6 samples, 0.34%)</title><rect x="81.6619%" y="469" width="0.3438%" height="15" fill="rgb(254,171,16)"/><text x="81.9119%" y="479.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (3 samples, 0.17%)</title><rect x="82.4069%" y="421" width="0.1719%" height="15" fill="rgb(230,171,20)"/><text x="82.6569%" y="431.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Div&lt;T&gt;&gt;::div (7 samples, 0.40%)</title><rect x="82.2923%" y="437" width="0.4011%" height="15" fill="rgb(210,71,41)"/><text x="82.5423%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3 samples, 0.17%)</title><rect x="82.7507%" y="421" width="0.1719%" height="15" fill="rgb(206,173,20)"/><text x="83.0007%" y="431.50"></text></g><g><title>&lt;num_complex::Complex&lt;T&gt; as core::ops::arith::Mul&gt;::mul (5 samples, 0.29%)</title><rect x="82.6934%" y="437" width="0.2865%" height="15" fill="rgb(233,88,34)"/><text x="82.9434%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 1.55%)</title><rect x="81.6619%" y="613" width="1.5473%" height="15" fill="rgb(223,209,46)"/><text x="81.9119%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 1.55%)</title><rect x="81.6619%" y="597" width="1.5473%" height="15" fill="rgb(250,43,18)"/><text x="81.9119%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (27 samples, 1.55%)</title><rect x="81.6619%" y="581" width="1.5473%" height="15" fill="rgb(208,13,10)"/><text x="81.9119%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 1.55%)</title><rect x="81.6619%" y="565" width="1.5473%" height="15" fill="rgb(212,200,36)"/><text x="81.9119%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (27 samples, 1.55%)</title><rect x="81.6619%" y="549" width="1.5473%" height="15" fill="rgb(225,90,30)"/><text x="81.9119%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 1.55%)</title><rect x="81.6619%" y="533" width="1.5473%" height="15" fill="rgb(236,182,39)"/><text x="81.9119%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (27 samples, 1.55%)</title><rect x="81.6619%" y="517" width="1.5473%" height="15" fill="rgb(212,144,35)"/><text x="81.9119%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 1.55%)</title><rect x="81.6619%" y="501" width="1.5473%" height="15" fill="rgb(228,63,44)"/><text x="81.9119%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (21 samples, 1.20%)</title><rect x="82.0057%" y="485" width="1.2034%" height="15" fill="rgb(228,109,6)"/><text x="82.2557%" y="495.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (21 samples, 1.20%)</title><rect x="82.0057%" y="469" width="1.2034%" height="15" fill="rgb(238,117,24)"/><text x="82.2557%" y="479.50"></text></g><g><title>tfhe::numerics::poly_multiplier::_{{closure}} (21 samples, 1.20%)</title><rect x="82.0057%" y="453" width="1.2034%" height="15" fill="rgb(242,26,26)"/><text x="82.2557%" y="463.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4 samples, 0.23%)</title><rect x="82.9799%" y="437" width="0.2292%" height="15" fill="rgb(221,92,48)"/><text x="83.2299%" y="447.50"></text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::new (14 samples, 0.80%)</title><rect x="83.2092%" y="581" width="0.8023%" height="15" fill="rgb(209,209,32)"/><text x="83.4592%" y="591.50"></text></g><g><title>rustfft::twiddles::single_twiddle (9 samples, 0.52%)</title><rect x="83.4957%" y="565" width="0.5158%" height="15" fill="rgb(221,70,22)"/><text x="83.7457%" y="575.50"></text></g><g><title>tfhe::lwe::LweBootstrappingKey::create (43 samples, 2.46%)</title><rect x="81.6619%" y="885" width="2.4642%" height="15" fill="rgb(248,145,5)"/><text x="81.9119%" y="895.50">tf..</text></g><g><title>tfhe::tgsw::TGswKey::encrypt (43 samples, 2.46%)</title><rect x="81.6619%" y="869" width="2.4642%" height="15" fill="rgb(226,116,26)"/><text x="81.9119%" y="879.50">tf..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (43 samples, 2.46%)</title><rect x="81.6619%" y="853" width="2.4642%" height="15" fill="rgb(244,5,17)"/><text x="81.9119%" y="863.50">tf..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (43 samples, 2.46%)</title><rect x="81.6619%" y="837" width="2.4642%" height="15" fill="rgb(252,159,33)"/><text x="81.9119%" y="847.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (43 samples, 2.46%)</title><rect x="81.6619%" y="821" width="2.4642%" height="15" fill="rgb(206,71,0)"/><text x="81.9119%" y="831.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 2.46%)</title><rect x="81.6619%" y="805" width="2.4642%" height="15" fill="rgb(233,118,54)"/><text x="81.9119%" y="815.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (43 samples, 2.46%)</title><rect x="81.6619%" y="789" width="2.4642%" height="15" fill="rgb(234,83,48)"/><text x="81.9119%" y="799.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (43 samples, 2.46%)</title><rect x="81.6619%" y="773" width="2.4642%" height="15" fill="rgb(228,3,54)"/><text x="81.9119%" y="783.50">co..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (43 samples, 2.46%)</title><rect x="81.6619%" y="757" width="2.4642%" height="15" fill="rgb(226,155,13)"/><text x="81.9119%" y="767.50">tf..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (43 samples, 2.46%)</title><rect x="81.6619%" y="741" width="2.4642%" height="15" fill="rgb(241,28,37)"/><text x="81.9119%" y="751.50">tf..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 2.46%)</title><rect x="81.6619%" y="725" width="2.4642%" height="15" fill="rgb(233,93,10)"/><text x="81.9119%" y="735.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (43 samples, 2.46%)</title><rect x="81.6619%" y="709" width="2.4642%" height="15" fill="rgb(225,113,19)"/><text x="81.9119%" y="719.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 2.46%)</title><rect x="81.6619%" y="693" width="2.4642%" height="15" fill="rgb(241,2,18)"/><text x="81.9119%" y="703.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (43 samples, 2.46%)</title><rect x="81.6619%" y="677" width="2.4642%" height="15" fill="rgb(228,207,21)"/><text x="81.9119%" y="687.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (43 samples, 2.46%)</title><rect x="81.6619%" y="661" width="2.4642%" height="15" fill="rgb(213,211,35)"/><text x="81.9119%" y="671.50">co..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (43 samples, 2.46%)</title><rect x="81.6619%" y="645" width="2.4642%" height="15" fill="rgb(209,83,10)"/><text x="81.9119%" y="655.50">tf..</text></g><g><title>tfhe::numerics::poly_multiplier (43 samples, 2.46%)</title><rect x="81.6619%" y="629" width="2.4642%" height="15" fill="rgb(209,164,1)"/><text x="81.9119%" y="639.50">tf..</text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (16 samples, 0.92%)</title><rect x="83.2092%" y="613" width="0.9169%" height="15" fill="rgb(213,184,43)"/><text x="83.4592%" y="623.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft_with_factors (16 samples, 0.92%)</title><rect x="83.2092%" y="597" width="0.9169%" height="15" fill="rgb(231,61,34)"/><text x="83.4592%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.11%)</title><rect x="84.0115%" y="581" width="0.1146%" height="15" fill="rgb(235,75,3)"/><text x="84.2615%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.11%)</title><rect x="84.0115%" y="565" width="0.1146%" height="15" fill="rgb(220,106,47)"/><text x="84.2615%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (2 samples, 0.11%)</title><rect x="84.0115%" y="549" width="0.1146%" height="15" fill="rgb(210,196,33)"/><text x="84.2615%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (2 samples, 0.11%)</title><rect x="84.0115%" y="533" width="0.1146%" height="15" fill="rgb(229,154,42)"/><text x="84.2615%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.11%)</title><rect x="84.0115%" y="517" width="0.1146%" height="15" fill="rgb(228,114,26)"/><text x="84.2615%" y="527.50"></text></g><g><title>tfhe::tgsw::TGswKey::encrypt (4 samples, 0.23%)</title><rect x="84.1261%" y="885" width="0.2292%" height="15" fill="rgb(208,144,1)"/><text x="84.3761%" y="895.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (4 samples, 0.23%)</title><rect x="84.1261%" y="869" width="0.2292%" height="15" fill="rgb(239,112,37)"/><text x="84.3761%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.23%)</title><rect x="84.1261%" y="853" width="0.2292%" height="15" fill="rgb(210,96,50)"/><text x="84.3761%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.23%)</title><rect x="84.1261%" y="837" width="0.2292%" height="15" fill="rgb(222,178,2)"/><text x="84.3761%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.23%)</title><rect x="84.1261%" y="821" width="0.2292%" height="15" fill="rgb(226,74,18)"/><text x="84.3761%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.23%)</title><rect x="84.1261%" y="805" width="0.2292%" height="15" fill="rgb(225,67,54)"/><text x="84.3761%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.23%)</title><rect x="84.1261%" y="789" width="0.2292%" height="15" fill="rgb(251,92,32)"/><text x="84.3761%" y="799.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (4 samples, 0.23%)</title><rect x="84.1261%" y="773" width="0.2292%" height="15" fill="rgb(228,149,22)"/><text x="84.3761%" y="783.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (4 samples, 0.23%)</title><rect x="84.1261%" y="757" width="0.2292%" height="15" fill="rgb(243,54,13)"/><text x="84.3761%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.23%)</title><rect x="84.1261%" y="741" width="0.2292%" height="15" fill="rgb(243,180,28)"/><text x="84.3761%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.23%)</title><rect x="84.1261%" y="725" width="0.2292%" height="15" fill="rgb(208,167,24)"/><text x="84.3761%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.23%)</title><rect x="84.1261%" y="709" width="0.2292%" height="15" fill="rgb(245,73,45)"/><text x="84.3761%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.23%)</title><rect x="84.1261%" y="693" width="0.2292%" height="15" fill="rgb(237,203,48)"/><text x="84.3761%" y="703.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.23%)</title><rect x="84.1261%" y="677" width="0.2292%" height="15" fill="rgb(211,197,16)"/><text x="84.3761%" y="687.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (4 samples, 0.23%)</title><rect x="84.1261%" y="661" width="0.2292%" height="15" fill="rgb(243,99,51)"/><text x="84.3761%" y="671.50"></text></g><g><title>tfhe::numerics::poly_multiplier (4 samples, 0.23%)</title><rect x="84.1261%" y="645" width="0.2292%" height="15" fill="rgb(215,123,29)"/><text x="84.3761%" y="655.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (4 samples, 0.23%)</title><rect x="84.1261%" y="629" width="0.2292%" height="15" fill="rgb(239,186,37)"/><text x="84.3761%" y="639.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft_with_factors (4 samples, 0.23%)</title><rect x="84.1261%" y="613" width="0.2292%" height="15" fill="rgb(252,136,39)"/><text x="84.3761%" y="623.50"></text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::new (4 samples, 0.23%)</title><rect x="84.1261%" y="597" width="0.2292%" height="15" fill="rgb(223,213,32)"/><text x="84.3761%" y="607.50"></text></g><g><title>rustfft::twiddles::single_twiddle (4 samples, 0.23%)</title><rect x="84.1261%" y="581" width="0.2292%" height="15" fill="rgb(233,115,5)"/><text x="84.3761%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.23%)</title><rect x="84.1261%" y="565" width="0.2292%" height="15" fill="rgb(207,226,44)"/><text x="84.3761%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (3 samples, 0.17%)</title><rect x="84.5272%" y="581" width="0.1719%" height="15" fill="rgb(208,126,0)"/><text x="84.7772%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.17%)</title><rect x="84.5272%" y="565" width="0.1719%" height="15" fill="rgb(244,66,21)"/><text x="84.7772%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.29%)</title><rect x="84.6991%" y="581" width="0.2865%" height="15" fill="rgb(222,97,12)"/><text x="84.9491%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (13 samples, 0.74%)</title><rect x="84.3553%" y="597" width="0.7450%" height="15" fill="rgb(219,213,19)"/><text x="84.6053%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="84.9857%" y="581" width="0.1146%" height="15" fill="rgb(252,169,30)"/><text x="85.2357%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::add_usize (2 samples, 0.11%)</title><rect x="85.5014%" y="581" width="0.1146%" height="15" fill="rgb(206,32,51)"/><text x="85.7514%" y="591.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (2 samples, 0.11%)</title><rect x="85.5014%" y="565" width="0.1146%" height="15" fill="rgb(250,172,42)"/><text x="85.7514%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.17%)</title><rect x="85.6160%" y="581" width="0.1719%" height="15" fill="rgb(209,34,43)"/><text x="85.8660%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.86%)</title><rect x="85.1003%" y="597" width="0.8596%" height="15" fill="rgb(223,11,35)"/><text x="85.3503%" y="607.50"></text></g><g><title>core::mem::swap (3 samples, 0.17%)</title><rect x="85.7880%" y="581" width="0.1719%" height="15" fill="rgb(251,219,26)"/><text x="86.0380%" y="591.50"></text></g><g><title>&lt;f64 as num_traits::cast::FromPrimitive&gt;::from_f64 (2 samples, 0.11%)</title><rect x="85.9599%" y="581" width="0.1146%" height="15" fill="rgb(231,119,3)"/><text x="86.2099%" y="591.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f64 (2 samples, 0.11%)</title><rect x="85.9599%" y="565" width="0.1146%" height="15" fill="rgb(216,97,11)"/><text x="86.2099%" y="575.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (2 samples, 0.11%)</title><rect x="86.4183%" y="565" width="0.1146%" height="15" fill="rgb(223,59,9)"/><text x="86.6683%" y="575.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::cos (9 samples, 0.52%)</title><rect x="86.5330%" y="565" width="0.5158%" height="15" fill="rgb(233,93,31)"/><text x="86.7830%" y="575.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (7 samples, 0.40%)</title><rect x="86.6476%" y="549" width="0.4011%" height="15" fill="rgb(239,81,33)"/><text x="86.8976%" y="559.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sin (4 samples, 0.23%)</title><rect x="87.0487%" y="565" width="0.2292%" height="15" fill="rgb(213,120,34)"/><text x="87.2987%" y="575.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sin (3 samples, 0.17%)</title><rect x="87.1060%" y="549" width="0.1719%" height="15" fill="rgb(243,49,53)"/><text x="87.3560%" y="559.50"></text></g><g><title>[libm-2.31.so] (2 samples, 0.11%)</title><rect x="87.1633%" y="533" width="0.1146%" height="15" fill="rgb(247,216,33)"/><text x="87.4133%" y="543.50"></text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (53 samples, 3.04%)</title><rect x="84.3553%" y="885" width="3.0372%" height="15" fill="rgb(226,26,14)"/><text x="84.6053%" y="895.50">tfh..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (53 samples, 3.04%)</title><rect x="84.3553%" y="869" width="3.0372%" height="15" fill="rgb(215,49,53)"/><text x="84.6053%" y="879.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (53 samples, 3.04%)</title><rect x="84.3553%" y="853" width="3.0372%" height="15" fill="rgb(245,162,40)"/><text x="84.6053%" y="863.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 3.04%)</title><rect x="84.3553%" y="837" width="3.0372%" height="15" fill="rgb(229,68,17)"/><text x="84.6053%" y="847.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (53 samples, 3.04%)</title><rect x="84.3553%" y="821" width="3.0372%" height="15" fill="rgb(213,182,10)"/><text x="84.6053%" y="831.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (53 samples, 3.04%)</title><rect x="84.3553%" y="805" width="3.0372%" height="15" fill="rgb(245,125,30)"/><text x="84.6053%" y="815.50">cor..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (53 samples, 3.04%)</title><rect x="84.3553%" y="789" width="3.0372%" height="15" fill="rgb(232,202,2)"/><text x="84.6053%" y="799.50">tfh..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (53 samples, 3.04%)</title><rect x="84.3553%" y="773" width="3.0372%" height="15" fill="rgb(237,140,51)"/><text x="84.6053%" y="783.50">tfh..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 3.04%)</title><rect x="84.3553%" y="757" width="3.0372%" height="15" fill="rgb(236,157,25)"/><text x="84.6053%" y="767.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (53 samples, 3.04%)</title><rect x="84.3553%" y="741" width="3.0372%" height="15" fill="rgb(219,209,0)"/><text x="84.6053%" y="751.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 3.04%)</title><rect x="84.3553%" y="725" width="3.0372%" height="15" fill="rgb(240,116,54)"/><text x="84.6053%" y="735.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (53 samples, 3.04%)</title><rect x="84.3553%" y="709" width="3.0372%" height="15" fill="rgb(216,10,36)"/><text x="84.6053%" y="719.50">cor..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (53 samples, 3.04%)</title><rect x="84.3553%" y="693" width="3.0372%" height="15" fill="rgb(222,72,44)"/><text x="84.6053%" y="703.50">cor..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (53 samples, 3.04%)</title><rect x="84.3553%" y="677" width="3.0372%" height="15" fill="rgb(232,159,9)"/><text x="84.6053%" y="687.50">tfh..</text></g><g><title>tfhe::numerics::poly_multiplier (53 samples, 3.04%)</title><rect x="84.3553%" y="661" width="3.0372%" height="15" fill="rgb(210,39,32)"/><text x="84.6053%" y="671.50">tfh..</text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (53 samples, 3.04%)</title><rect x="84.3553%" y="645" width="3.0372%" height="15" fill="rgb(216,194,45)"/><text x="84.6053%" y="655.50">rus..</text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft_with_factors (53 samples, 3.04%)</title><rect x="84.3553%" y="629" width="3.0372%" height="15" fill="rgb(218,18,35)"/><text x="84.6053%" y="639.50">rus..</text></g><g><title>rustfft::algorithm::radix4::Radix4&lt;T&gt;::new (53 samples, 3.04%)</title><rect x="84.3553%" y="613" width="3.0372%" height="15" fill="rgb(207,83,51)"/><text x="84.6053%" y="623.50">rus..</text></g><g><title>rustfft::twiddles::single_twiddle (25 samples, 1.43%)</title><rect x="85.9599%" y="597" width="1.4327%" height="15" fill="rgb(225,63,43)"/><text x="86.2099%" y="607.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::from_polar (23 samples, 1.32%)</title><rect x="86.0745%" y="581" width="1.3181%" height="15" fill="rgb(207,57,36)"/><text x="86.3245%" y="591.50"></text></g><g><title>num_complex::Complex&lt;T&gt;::new (2 samples, 0.11%)</title><rect x="87.2779%" y="565" width="0.1146%" height="15" fill="rgb(216,99,33)"/><text x="87.5279%" y="575.50"></text></g><g><title>[unknown] (1,527 samples, 87.51%)</title><rect x="0.0000%" y="901" width="87.5072%" height="15" fill="rgb(225,42,16)"/><text x="0.2500%" y="911.50">[unknown]</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (2 samples, 0.11%)</title><rect x="87.3926%" y="885" width="0.1146%" height="15" fill="rgb(220,201,45)"/><text x="87.6426%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.11%)</title><rect x="87.3926%" y="869" width="0.1146%" height="15" fill="rgb(225,33,4)"/><text x="87.6426%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.11%)</title><rect x="87.3926%" y="853" width="0.1146%" height="15" fill="rgb(224,33,50)"/><text x="87.6426%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.11%)</title><rect x="87.3926%" y="837" width="0.1146%" height="15" fill="rgb(246,198,51)"/><text x="87.6426%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.11%)</title><rect x="87.3926%" y="821" width="0.1146%" height="15" fill="rgb(205,22,4)"/><text x="87.6426%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.11%)</title><rect x="87.3926%" y="805" width="0.1146%" height="15" fill="rgb(206,3,8)"/><text x="87.6426%" y="815.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (2 samples, 0.11%)</title><rect x="87.3926%" y="789" width="0.1146%" height="15" fill="rgb(251,23,15)"/><text x="87.6426%" y="799.50"></text></g><g><title>tfhe::numerics::poly_multiplier (2 samples, 0.11%)</title><rect x="87.3926%" y="773" width="0.1146%" height="15" fill="rgb(252,88,28)"/><text x="87.6426%" y="783.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft (2 samples, 0.11%)</title><rect x="87.3926%" y="757" width="0.1146%" height="15" fill="rgb(212,127,14)"/><text x="87.6426%" y="767.50"></text></g><g><title>rustfft::plan::FFTplanner&lt;T&gt;::plan_fft_with_factors (2 samples, 0.11%)</title><rect x="87.3926%" y="741" width="0.1146%" height="15" fill="rgb(247,145,37)"/><text x="87.6426%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.29%)</title><rect x="89.0544%" y="597" width="0.2865%" height="15" fill="rgb(209,117,53)"/><text x="89.3044%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (9 samples, 0.52%)</title><rect x="88.9398%" y="613" width="0.5158%" height="15" fill="rgb(212,90,42)"/><text x="89.1898%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.11%)</title><rect x="89.3410%" y="597" width="0.1146%" height="15" fill="rgb(218,164,37)"/><text x="89.5910%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 1.09%)</title><rect x="88.8252%" y="629" width="1.0888%" height="15" fill="rgb(246,65,34)"/><text x="89.0752%" y="639.50"></text></g><g><title>core::slice::from_raw_parts (8 samples, 0.46%)</title><rect x="89.4556%" y="613" width="0.4585%" height="15" fill="rgb(231,100,33)"/><text x="89.7056%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.34%)</title><rect x="89.5702%" y="597" width="0.3438%" height="15" fill="rgb(228,126,14)"/><text x="89.8202%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (28 samples, 1.60%)</title><rect x="88.5960%" y="645" width="1.6046%" height="15" fill="rgb(215,173,21)"/><text x="88.8460%" y="655.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.29%)</title><rect x="89.9140%" y="629" width="0.2865%" height="15" fill="rgb(210,6,40)"/><text x="90.1640%" y="639.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.17%)</title><rect x="90.0287%" y="613" width="0.1719%" height="15" fill="rgb(212,48,18)"/><text x="90.2787%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.11%)</title><rect x="90.5444%" y="597" width="0.1146%" height="15" fill="rgb(230,214,11)"/><text x="90.7944%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (4 samples, 0.23%)</title><rect x="90.5444%" y="613" width="0.2292%" height="15" fill="rgb(254,105,39)"/><text x="90.7944%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.11%)</title><rect x="90.6590%" y="597" width="0.1146%" height="15" fill="rgb(245,158,5)"/><text x="90.9090%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (11 samples, 0.63%)</title><rect x="90.4871%" y="629" width="0.6304%" height="15" fill="rgb(249,208,11)"/><text x="90.7371%" y="639.50"></text></g><g><title>core::slice::from_raw_parts_mut (6 samples, 0.34%)</title><rect x="90.7736%" y="613" width="0.3438%" height="15" fill="rgb(210,39,28)"/><text x="91.0236%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.17%)</title><rect x="90.9456%" y="597" width="0.1719%" height="15" fill="rgb(211,56,53)"/><text x="91.1956%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (17 samples, 0.97%)</title><rect x="90.2006%" y="645" width="0.9742%" height="15" fill="rgb(226,201,30)"/><text x="90.4506%" y="655.50"></text></g><g><title>&lt;u32 as rand::distributions::utils::WideningMultiply&gt;::wmul (4 samples, 0.23%)</title><rect x="91.4040%" y="613" width="0.2292%" height="15" fill="rgb(239,101,34)"/><text x="91.6540%" y="623.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_add (3 samples, 0.17%)</title><rect x="91.6332%" y="613" width="0.1719%" height="15" fill="rgb(226,209,5)"/><text x="91.8832%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.29%)</title><rect x="93.1232%" y="469" width="0.2865%" height="15" fill="rgb(250,105,47)"/><text x="93.3732%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.17%)</title><rect x="93.4097%" y="469" width="0.1719%" height="15" fill="rgb(230,72,3)"/><text x="93.6597%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.17%)</title><rect x="93.6390%" y="453" width="0.1719%" height="15" fill="rgb(232,218,39)"/><text x="93.8890%" y="463.50"></text></g><g><title>&lt;core::slice::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.03%)</title><rect x="92.8940%" y="485" width="1.0315%" height="15" fill="rgb(248,166,6)"/><text x="93.1440%" y="495.50"></text></g><g><title>core::slice::IterMut&lt;T&gt;::post_inc_start (6 samples, 0.34%)</title><rect x="93.5817%" y="469" width="0.3438%" height="15" fill="rgb(247,89,20)"/><text x="93.8317%" y="479.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (28 samples, 1.60%)</title><rect x="92.4355%" y="501" width="1.6046%" height="15" fill="rgb(248,130,54)"/><text x="92.6855%" y="511.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (35 samples, 2.01%)</title><rect x="92.0917%" y="565" width="2.0057%" height="15" fill="rgb(234,196,4)"/><text x="92.3417%" y="575.50">&lt;..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (34 samples, 1.95%)</title><rect x="92.1490%" y="549" width="1.9484%" height="15" fill="rgb(250,143,31)"/><text x="92.3990%" y="559.50">&lt;..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (29 samples, 1.66%)</title><rect x="92.4355%" y="533" width="1.6619%" height="15" fill="rgb(211,110,34)"/><text x="92.6855%" y="543.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (29 samples, 1.66%)</title><rect x="92.4355%" y="517" width="1.6619%" height="15" fill="rgb(215,124,48)"/><text x="92.6855%" y="527.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::Distribution&lt;X&gt;&gt;::sample (56 samples, 3.21%)</title><rect x="91.1748%" y="645" width="3.2092%" height="15" fill="rgb(216,46,13)"/><text x="91.4248%" y="655.50">&lt;ra..</text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;i32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (55 samples, 3.15%)</title><rect x="91.2321%" y="629" width="3.1519%" height="15" fill="rgb(205,184,25)"/><text x="91.4821%" y="639.50">&lt;ra..</text></g><g><title>rand::Rng::gen (45 samples, 2.58%)</title><rect x="91.8052%" y="613" width="2.5788%" height="15" fill="rgb(228,1,10)"/><text x="92.0552%" y="623.50">ra..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (44 samples, 2.52%)</title><rect x="91.8625%" y="597" width="2.5215%" height="15" fill="rgb(213,116,27)"/><text x="92.1125%" y="607.50">ra..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (41 samples, 2.35%)</title><rect x="92.0344%" y="581" width="2.3496%" height="15" fill="rgb(241,95,50)"/><text x="92.2844%" y="591.50">&lt;..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (5 samples, 0.29%)</title><rect x="94.0974%" y="565" width="0.2865%" height="15" fill="rgb(238,48,32)"/><text x="94.3474%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.23%)</title><rect x="94.1547%" y="549" width="0.2292%" height="15" fill="rgb(235,113,49)"/><text x="94.4047%" y="559.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::add_usize (3 samples, 0.17%)</title><rect x="94.7851%" y="629" width="0.1719%" height="15" fill="rgb(205,127,43)"/><text x="95.0351%" y="639.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u32&gt;::try_from (2 samples, 0.11%)</title><rect x="94.8424%" y="613" width="0.1146%" height="15" fill="rgb(250,162,2)"/><text x="95.0924%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.11%)</title><rect x="95.2436%" y="597" width="0.1146%" height="15" fill="rgb(220,13,41)"/><text x="95.4936%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.17%)</title><rect x="95.4728%" y="581" width="0.1719%" height="15" fill="rgb(249,221,25)"/><text x="95.7228%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="95.5301%" y="565" width="0.1146%" height="15" fill="rgb(215,208,19)"/><text x="95.7801%" y="575.50"></text></g><g><title>core::ptr::read (7 samples, 0.40%)</title><rect x="95.3582%" y="597" width="0.4011%" height="15" fill="rgb(236,175,2)"/><text x="95.6082%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.11%)</title><rect x="95.6447%" y="581" width="0.1146%" height="15" fill="rgb(241,52,2)"/><text x="95.8947%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (25 samples, 1.43%)</title><rect x="94.3840%" y="645" width="1.4327%" height="15" fill="rgb(248,140,14)"/><text x="94.6340%" y="655.50"></text></g><g><title>core::mem::swap (14 samples, 0.80%)</title><rect x="95.0143%" y="629" width="0.8023%" height="15" fill="rgb(253,22,42)"/><text x="95.2643%" y="639.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (12 samples, 0.69%)</title><rect x="95.1289%" y="613" width="0.6877%" height="15" fill="rgb(234,61,47)"/><text x="95.3789%" y="623.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_add (3 samples, 0.17%)</title><rect x="95.8166%" y="645" width="0.1719%" height="15" fill="rgb(208,226,15)"/><text x="96.0666%" y="655.50"></text></g><g><title>tfhe::lwe::LweKeySwitchKey::create (144 samples, 8.25%)</title><rect x="87.7937%" y="677" width="8.2521%" height="15" fill="rgb(217,221,4)"/><text x="88.0437%" y="687.50">tfhe::lwe::..</text></g><g><title>tfhe::lwe::LweKey::encrypt_with_external_noise (143 samples, 8.19%)</title><rect x="87.8510%" y="661" width="8.1948%" height="15" fill="rgb(212,174,34)"/><text x="88.1010%" y="671.50">tfhe::lwe::..</text></g><g><title>tfhe::tgsw::TGswSample::add_mu_int_h (2 samples, 0.11%)</title><rect x="96.0458%" y="661" width="0.1146%" height="15" fill="rgb(253,83,4)"/><text x="96.2958%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.11%)</title><rect x="96.0458%" y="645" width="0.1146%" height="15" fill="rgb(250,195,49)"/><text x="96.2958%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="96.0458%" y="629" width="0.1146%" height="15" fill="rgb(241,192,25)"/><text x="96.2958%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (2 samples, 0.11%)</title><rect x="96.1605%" y="389" width="0.1146%" height="15" fill="rgb(208,124,10)"/><text x="96.4105%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.11%)</title><rect x="96.1605%" y="373" width="0.1146%" height="15" fill="rgb(222,33,0)"/><text x="96.4105%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.11%)</title><rect x="96.1605%" y="357" width="0.1146%" height="15" fill="rgb(234,209,28)"/><text x="96.4105%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.17%)</title><rect x="96.1605%" y="533" width="0.1719%" height="15" fill="rgb(224,11,23)"/><text x="96.4105%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.17%)</title><rect x="96.1605%" y="517" width="0.1719%" height="15" fill="rgb(232,99,1)"/><text x="96.4105%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.17%)</title><rect x="96.1605%" y="501" width="0.1719%" height="15" fill="rgb(237,95,45)"/><text x="96.4105%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.17%)</title><rect x="96.1605%" y="485" width="0.1719%" height="15" fill="rgb(208,109,11)"/><text x="96.4105%" y="495.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.17%)</title><rect x="96.1605%" y="469" width="0.1719%" height="15" fill="rgb(216,190,48)"/><text x="96.4105%" y="479.50"></text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero::_{{closure}} (3 samples, 0.17%)</title><rect x="96.1605%" y="453" width="0.1719%" height="15" fill="rgb(251,171,36)"/><text x="96.4105%" y="463.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as core::ops::arith::Add&gt;::add (3 samples, 0.17%)</title><rect x="96.1605%" y="437" width="0.1719%" height="15" fill="rgb(230,62,22)"/><text x="96.4105%" y="447.50"></text></g><g><title>tfhe::polynomial::match_and_pad (3 samples, 0.17%)</title><rect x="96.1605%" y="421" width="0.1719%" height="15" fill="rgb(225,114,35)"/><text x="96.4105%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_front (3 samples, 0.17%)</title><rect x="96.1605%" y="405" width="0.1719%" height="15" fill="rgb(215,118,42)"/><text x="96.4105%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.23%)</title><rect x="97.4785%" y="341" width="0.2292%" height="15" fill="rgb(243,119,21)"/><text x="97.7285%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.74%)</title><rect x="97.0774%" y="373" width="0.7450%" height="15" fill="rgb(252,177,53)"/><text x="97.3274%" y="383.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.63%)</title><rect x="97.1920%" y="357" width="0.6304%" height="15" fill="rgb(237,209,29)"/><text x="97.4420%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.11%)</title><rect x="97.7077%" y="341" width="0.1146%" height="15" fill="rgb(212,65,23)"/><text x="97.9577%" y="351.50"></text></g><g><title>&lt;alloc::collections::vec_deque::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.15%)</title><rect x="96.7335%" y="389" width="1.1461%" height="15" fill="rgb(230,222,46)"/><text x="96.9835%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 1.49%)</title><rect x="96.5043%" y="421" width="1.4900%" height="15" fill="rgb(215,135,32)"/><text x="96.7543%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (26 samples, 1.49%)</title><rect x="96.5043%" y="405" width="1.4900%" height="15" fill="rgb(246,101,22)"/><text x="96.7543%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.11%)</title><rect x="97.8797%" y="389" width="0.1146%" height="15" fill="rgb(206,107,13)"/><text x="98.1297%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.11%)</title><rect x="97.8797%" y="373" width="0.1146%" height="15" fill="rgb(250,100,44)"/><text x="98.1297%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 2.06%)</title><rect x="96.5043%" y="437" width="2.0630%" height="15" fill="rgb(231,147,38)"/><text x="96.7543%" y="447.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.57%)</title><rect x="97.9943%" y="421" width="0.5731%" height="15" fill="rgb(229,8,40)"/><text x="98.2443%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.52%)</title><rect x="98.0516%" y="405" width="0.5158%" height="15" fill="rgb(221,135,30)"/><text x="98.3016%" y="415.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as core::ops::arith::Add&gt;::add::_{{closure}} (8 samples, 0.46%)</title><rect x="98.1089%" y="389" width="0.4585%" height="15" fill="rgb(249,193,18)"/><text x="98.3589%" y="399.50"></text></g><g><title>&lt;&amp;i32 as core::ops::arith::Add&lt;&amp;i32&gt;&gt;::add (6 samples, 0.34%)</title><rect x="98.2235%" y="373" width="0.3438%" height="15" fill="rgb(209,133,39)"/><text x="98.4735%" y="383.50"></text></g><g><title>&lt;i32 as core::ops::arith::Add&gt;::add (2 samples, 0.11%)</title><rect x="98.4527%" y="357" width="0.1146%" height="15" fill="rgb(232,100,14)"/><text x="98.7027%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 2.58%)</title><rect x="96.3324%" y="517" width="2.5788%" height="15" fill="rgb(224,185,1)"/><text x="96.5824%" y="527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 2.58%)</title><rect x="96.3324%" y="501" width="2.5788%" height="15" fill="rgb(223,139,8)"/><text x="96.5824%" y="511.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (45 samples, 2.58%)</title><rect x="96.3324%" y="485" width="2.5788%" height="15" fill="rgb(232,213,38)"/><text x="96.5824%" y="495.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (45 samples, 2.58%)</title><rect x="96.3324%" y="469" width="2.5788%" height="15" fill="rgb(207,94,22)"/><text x="96.5824%" y="479.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (45 samples, 2.58%)</title><rect x="96.3324%" y="453" width="2.5788%" height="15" fill="rgb(219,183,54)"/><text x="96.5824%" y="463.50">al..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (6 samples, 0.34%)</title><rect x="98.5673%" y="437" width="0.3438%" height="15" fill="rgb(216,185,54)"/><text x="98.8173%" y="447.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.17%)</title><rect x="98.7393%" y="421" width="0.1719%" height="15" fill="rgb(254,217,39)"/><text x="98.9893%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (3 samples, 0.17%)</title><rect x="99.0258%" y="485" width="0.1719%" height="15" fill="rgb(240,178,23)"/><text x="99.2758%" y="495.50"></text></g><g><title>&lt;tfhe::polynomial::TorusPolynomial as core::ops::arith::Add&gt;::add (53 samples, 3.04%)</title><rect x="96.3324%" y="533" width="3.0372%" height="15" fill="rgb(218,11,47)"/><text x="96.5824%" y="543.50">&lt;tf..</text></g><g><title>tfhe::polynomial::match_and_pad (8 samples, 0.46%)</title><rect x="98.9112%" y="517" width="0.4585%" height="15" fill="rgb(218,51,51)"/><text x="99.1612%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_front (6 samples, 0.34%)</title><rect x="99.0258%" y="501" width="0.3438%" height="15" fill="rgb(238,126,27)"/><text x="99.2758%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::grow_if_necessary (3 samples, 0.17%)</title><rect x="99.1977%" y="485" width="0.1719%" height="15" fill="rgb(249,202,22)"/><text x="99.4477%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::is_full (2 samples, 0.11%)</title><rect x="99.2550%" y="469" width="0.1146%" height="15" fill="rgb(254,195,49)"/><text x="99.5050%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::len (2 samples, 0.11%)</title><rect x="99.2550%" y="453" width="0.1146%" height="15" fill="rgb(208,123,14)"/><text x="99.5050%" y="463.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.17%)</title><rect x="99.3696%" y="533" width="0.1719%" height="15" fill="rgb(224,200,8)"/><text x="99.6196%" y="543.50"></text></g><g><title>&lt;T as alloc::vec::SpecFromElem&gt;::from_elem (3 samples, 0.17%)</title><rect x="99.3696%" y="517" width="0.1719%" height="15" fill="rgb(217,61,36)"/><text x="99.6196%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_with (3 samples, 0.17%)</title><rect x="99.3696%" y="501" width="0.1719%" height="15" fill="rgb(206,35,45)"/><text x="99.6196%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.11%)</title><rect x="99.5415%" y="533" width="0.1146%" height="15" fill="rgb(217,65,33)"/><text x="99.7915%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="99.5415%" y="517" width="0.1146%" height="15" fill="rgb(222,158,48)"/><text x="99.7915%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="99.5415%" y="501" width="0.1146%" height="15" fill="rgb(254,2,54)"/><text x="99.7915%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="99.5415%" y="485" width="0.1146%" height="15" fill="rgb(250,143,38)"/><text x="99.7915%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.11%)</title><rect x="99.5415%" y="469" width="0.1146%" height="15" fill="rgb(248,25,0)"/><text x="99.7915%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.11%)</title><rect x="99.5415%" y="453" width="0.1146%" height="15" fill="rgb(206,152,27)"/><text x="99.7915%" y="463.50"></text></g><g><title>__libc_start_main (209 samples, 11.98%)</title><rect x="87.7364%" y="885" width="11.9771%" height="15" fill="rgb(240,77,30)"/><text x="87.9864%" y="895.50">__libc_start_main</text></g><g><title>main (209 samples, 11.98%)</title><rect x="87.7364%" y="869" width="11.9771%" height="15" fill="rgb(231,5,3)"/><text x="87.9864%" y="879.50">main</text></g><g><title>std::rt::lang_start (209 samples, 11.98%)</title><rect x="87.7364%" y="853" width="11.9771%" height="15" fill="rgb(207,226,32)"/><text x="87.9864%" y="863.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (209 samples, 11.98%)</title><rect x="87.7364%" y="837" width="11.9771%" height="15" fill="rgb(222,207,47)"/><text x="87.9864%" y="847.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (209 samples, 11.98%)</title><rect x="87.7364%" y="821" width="11.9771%" height="15" fill="rgb(229,115,45)"/><text x="87.9864%" y="831.50">std::panic::catch_..</text></g><g><title>std::panicking::try (209 samples, 11.98%)</title><rect x="87.7364%" y="805" width="11.9771%" height="15" fill="rgb(224,191,6)"/><text x="87.9864%" y="815.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (209 samples, 11.98%)</title><rect x="87.7364%" y="789" width="11.9771%" height="15" fill="rgb(230,227,24)"/><text x="87.9864%" y="799.50">__rust_maybe_catch..</text></g><g><title>std::panicking::try::do_call (209 samples, 11.98%)</title><rect x="87.7364%" y="773" width="11.9771%" height="15" fill="rgb(228,80,19)"/><text x="87.9864%" y="783.50">std::panicking::tr..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (209 samples, 11.98%)</title><rect x="87.7364%" y="757" width="11.9771%" height="15" fill="rgb(247,229,0)"/><text x="87.9864%" y="767.50">std::rt::lang_star..</text></g><g><title>std::rt::lang_start::_{{closure}} (209 samples, 11.98%)</title><rect x="87.7364%" y="741" width="11.9771%" height="15" fill="rgb(237,194,15)"/><text x="87.9864%" y="751.50">std::rt::lang_star..</text></g><g><title>encrypt::main (209 samples, 11.98%)</title><rect x="87.7364%" y="725" width="11.9771%" height="15" fill="rgb(219,203,20)"/><text x="87.9864%" y="735.50">encrypt::main</text></g><g><title>tfhe::bootstrapping::new_random_gate_bootstrapping_secret_keyset (208 samples, 11.92%)</title><rect x="87.7937%" y="709" width="11.9198%" height="15" fill="rgb(234,128,8)"/><text x="88.0437%" y="719.50">tfhe::bootstrappin..</text></g><g><title>tfhe::lwe::LweBootstrappingKey::create (208 samples, 11.92%)</title><rect x="87.7937%" y="693" width="11.9198%" height="15" fill="rgb(248,202,8)"/><text x="88.0437%" y="703.50">tfhe::lwe::LweBoot..</text></g><g><title>tfhe::tgsw::TGswKey::encrypt (64 samples, 3.67%)</title><rect x="96.0458%" y="677" width="3.6676%" height="15" fill="rgb(206,104,37)"/><text x="96.2958%" y="687.50">tfhe..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero (62 samples, 3.55%)</title><rect x="96.1605%" y="661" width="3.5530%" height="15" fill="rgb(223,8,27)"/><text x="96.4105%" y="671.50">tfhe..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (62 samples, 3.55%)</title><rect x="96.1605%" y="645" width="3.5530%" height="15" fill="rgb(216,217,28)"/><text x="96.4105%" y="655.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (62 samples, 3.55%)</title><rect x="96.1605%" y="629" width="3.5530%" height="15" fill="rgb(249,199,1)"/><text x="96.4105%" y="639.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 3.55%)</title><rect x="96.1605%" y="613" width="3.5530%" height="15" fill="rgb(240,85,17)"/><text x="96.4105%" y="623.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (62 samples, 3.55%)</title><rect x="96.1605%" y="597" width="3.5530%" height="15" fill="rgb(206,108,45)"/><text x="96.4105%" y="607.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (62 samples, 3.55%)</title><rect x="96.1605%" y="581" width="3.5530%" height="15" fill="rgb(245,210,41)"/><text x="96.4105%" y="591.50">core..</text></g><g><title>tfhe::tgsw::TGswSample::encrypt_zero::_{{closure}} (62 samples, 3.55%)</title><rect x="96.1605%" y="565" width="3.5530%" height="15" fill="rgb(206,13,37)"/><text x="96.4105%" y="575.50">tfhe..</text></g><g><title>tfhe::tlwe::TLweSample::encrypt_zero (62 samples, 3.55%)</title><rect x="96.1605%" y="549" width="3.5530%" height="15" fill="rgb(250,61,18)"/><text x="96.4105%" y="559.50">tfhe..</text></g><g><title>_start (214 samples, 12.26%)</title><rect x="87.5072%" y="901" width="12.2636%" height="15" fill="rgb(235,172,48)"/><text x="87.7572%" y="911.50">_start</text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.11%)</title><rect x="99.7708%" y="901" width="0.1146%" height="15" fill="rgb(249,201,17)"/><text x="100.0208%" y="911.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.11%)</title><rect x="99.7708%" y="885" width="0.1146%" height="15" fill="rgb(219,208,6)"/><text x="100.0208%" y="895.50"></text></g><g><title>all (1,745 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(248,31,23)"/><text x="0.2500%" y="943.50"></text></g><g><title>encrypt (1,745 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(245,15,42)"/><text x="0.2500%" y="927.50">encrypt</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2 samples, 0.11%)</title><rect x="99.8854%" y="901" width="0.1146%" height="15" fill="rgb(222,217,39)"/><text x="100.1354%" y="911.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2 samples, 0.11%)</title><rect x="99.8854%" y="885" width="0.1146%" height="15" fill="rgb(210,219,27)"/><text x="100.1354%" y="895.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (2 samples, 0.11%)</title><rect x="99.8854%" y="869" width="0.1146%" height="15" fill="rgb(252,166,36)"/><text x="100.1354%" y="879.50"></text></g><g><title>rand_chacha::guts::round (2 samples, 0.11%)</title><rect x="99.8854%" y="853" width="0.1146%" height="15" fill="rgb(245,132,34)"/><text x="100.1354%" y="863.50"></text></g></svg></svg>